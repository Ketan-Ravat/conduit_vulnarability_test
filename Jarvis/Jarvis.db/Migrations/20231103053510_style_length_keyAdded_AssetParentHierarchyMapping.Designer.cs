// <auto-generated />
using System;
using System.Collections.Generic;
using Jarvis.db.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Jarvis.db.Migrations
{
    [DbContext(typeof(DBContextFactory))]
    [Migration("20231103053510_style_length_keyAdded_AssetParentHierarchyMapping")]
    partial class style_length_keyAdded_AssetParentHierarchyMapping
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Jarvis.db.Models.ActiveAssetPMWOlineMapping", b =>
                {
                    b.Property<Guid>("active_asset_pm_woline_mapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_pm_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("pm_form_output_data")
                        .HasColumnType("text");

                    b.Property<Guid>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("active_asset_pm_woline_mapping_id");

                    b.HasIndex("asset_pm_id");

                    b.HasIndex("woonboardingassets_id")
                        .IsUnique();

                    b.ToTable("ActiveAssetPMWOlineMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.Asset", b =>
                {
                    b.Property<Guid>("asset_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Catalog_Number")
                        .HasColumnType("text");

                    b.Property<string>("Identification")
                        .HasColumnType("text");

                    b.Property<string>("Install_Date")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("QR_code")
                        .HasColumnType("text");

                    b.Property<DateTime?>("arc_flash_study_last_performed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("asset_approved_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("asset_approved_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("asset_barcode_id")
                        .HasColumnType("text");

                    b.Property<int?>("asset_expected_usefull_life")
                        .HasColumnType("integer");

                    b.Property<int?>("asset_hierarchy_id")
                        .HasColumnType("integer");

                    b.Property<int?>("asset_operating_condition_state")
                        .HasColumnType("integer");

                    b.Property<string>("asset_photo")
                        .HasColumnType("text");

                    b.Property<int?>("asset_placement")
                        .HasColumnType("integer");

                    b.Property<int?>("asset_request_status")
                        .HasColumnType("integer");

                    b.Property<string>("asset_requested_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("asset_requested_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("asset_serial_number")
                        .HasColumnType("text");

                    b.Property<string>("asset_type")
                        .HasColumnType("text");

                    b.Property<string>("children")
                        .HasColumnType("text");

                    b.Property<string>("client_internal_id")
                        .HasColumnType("text");

                    b.Property<int?>("code_compliance")
                        .HasColumnType("integer");

                    b.Property<string>("comments")
                        .HasColumnType("text");

                    b.Property<DateTime?>("commisiion_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("company_id")
                        .HasColumnType("text");

                    b.Property<int>("component_level_type_id")
                        .HasColumnType("integer");

                    b.Property<double?>("condition_index")
                        .HasColumnType("double precision");

                    b.Property<int?>("condition_index_type")
                        .HasColumnType("integer");

                    b.Property<int?>("condition_state")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("criticality_index")
                        .HasColumnType("integer");

                    b.Property<int?>("criticality_index_type")
                        .HasColumnType("integer");

                    b.Property<string>("current_stage")
                        .HasColumnType("text");

                    b.Property<DateTime?>("electrical_insepction_last_performed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("field_notes")
                        .HasColumnType("text");

                    b.Property<Guid?>("form_id")
                        .HasColumnType("uuid");

                    b.Property<string>("form_retrived_nameplate_info")
                        .HasColumnType("text");

                    b.Property<int?>("form_type_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("infrared_insepction_last_performed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("inspection_further_details")
                        .HasColumnType("text");

                    b.Property<int?>("inspection_verdict")
                        .HasColumnType("integer");

                    b.Property<Guid?>("inspectionform_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("inspectiontemplate_asset_class_id")
                        .HasColumnType("uuid");

                    b.Property<string>("internal_asset_id")
                        .HasColumnType("text");

                    b.Property<DateTime?>("last_inspected_formio_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<List<AssetsValueJsonObject>>("lastinspection_attribute_values")
                        .HasColumnType("jsonb");

                    b.Property<string>("levels")
                        .HasColumnType("text");

                    b.Property<DateTime?>("mechanical_insepction_last_performed")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("meter_hours")
                        .HasColumnType("bigint");

                    b.Property<string>("model_name")
                        .HasColumnType("text");

                    b.Property<string>("model_year")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("mwo_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("mwo_inspection_type_status")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<string>("parent")
                        .HasColumnType("text");

                    b.Property<string>("problem_description")
                        .HasColumnType("text");

                    b.Property<string>("product_name")
                        .HasColumnType("text");

                    b.Property<int?>("recommended_action")
                        .HasColumnType("integer");

                    b.Property<int?>("recommended_action_schedule")
                        .HasColumnType("integer");

                    b.Property<int?>("repair_resolution")
                        .HasColumnType("integer");

                    b.Property<int?>("replacement_resolution")
                        .HasColumnType("integer");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<string>("site_location")
                        .HasColumnType("text");

                    b.Property<string>("solution_description")
                        .HasColumnType("text");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.Property<int?>("thermal_classification_id")
                        .HasColumnType("integer");

                    b.Property<int?>("usage")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("visual_insepction_last_performed")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("asset_id");

                    b.HasIndex("asset_hierarchy_id");

                    b.HasIndex("condition_state");

                    b.HasIndex("form_id");

                    b.HasIndex("form_type_id");

                    b.HasIndex("inspectionform_id");

                    b.HasIndex("inspectiontemplate_asset_class_id");

                    b.HasIndex("site_id");

                    b.HasIndex("status");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetActivityLogs", b =>
                {
                    b.Property<int>("activity_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("activity_header")
                        .HasColumnType("text");

                    b.Property<string>("activity_message")
                        .HasColumnType("text");

                    b.Property<int>("activity_type")
                        .HasColumnType("integer");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("data")
                        .HasColumnType("text");

                    b.Property<string>("ref_id")
                        .HasColumnType("text");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.HasKey("activity_id");

                    b.HasIndex("asset_id");

                    b.ToTable("AssetActivityLogs");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetAttachmentMapping", b =>
                {
                    b.Property<Guid>("assetatachmentmapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("file_name")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<string>("user_uploaded_file_name")
                        .HasColumnType("text");

                    b.HasKey("assetatachmentmapping_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("site_id");

                    b.ToTable("AssetAttachmentMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetChildrenHierarchyMapping", b =>
                {
                    b.Property<Guid>("asset_children_hierrachy_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("children_asset_id")
                        .HasColumnType("uuid");

                    b.Property<string>("circuit")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<Guid?>("via_subcomponent_asset_id")
                        .HasColumnType("uuid");

                    b.HasKey("asset_children_hierrachy_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("site_id");

                    b.ToTable("AssetChildrenHierarchyMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetClassFormIOMapping", b =>
                {
                    b.Property<Guid>("asset_class_formio_mapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<Guid?>("form_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("inspectiontemplate_asset_class_id")
                        .HasColumnType("uuid");

                    b.Property<bool>("isarchive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int?>("wo_type")
                        .HasColumnType("integer");

                    b.HasKey("asset_class_formio_mapping_id");

                    b.HasIndex("form_id");

                    b.HasIndex("inspectiontemplate_asset_class_id");

                    b.HasIndex("wo_type");

                    b.ToTable("AssetClassFormIOMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetFormIO", b =>
                {
                    b.Property<Guid>("asset_form_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("WOcategorytoTaskMapping_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("accepted_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("accepted_by")
                        .HasColumnType("text");

                    b.Property<string>("asset_form_data")
                        .HasColumnType("text");

                    b.Property<string>("asset_form_description")
                        .HasColumnType("text");

                    b.Property<string>("asset_form_name")
                        .HasColumnType("text");

                    b.Property<string>("asset_form_type")
                        .HasColumnType("text");

                    b.Property<Guid?>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool?>("defects")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("export_pdf_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("form_id")
                        .HasColumnType("uuid");

                    b.Property<string>("form_retrived_asset_id")
                        .HasColumnType("text");

                    b.Property<string>("form_retrived_asset_name")
                        .HasColumnType("text");

                    b.Property<string>("form_retrived_data")
                        .HasColumnType("text");

                    b.Property<string>("form_retrived_location")
                        .HasColumnType("text");

                    b.Property<string>("form_retrived_nameplate_info")
                        .HasColumnType("text");

                    b.Property<string>("form_retrived_workOrderType")
                        .HasColumnType("text");

                    b.Property<DateTime?>("inspected_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("inspection_verdict")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("intial_form_filled_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("is_main_asset_created")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int?>("pdf_report_status")
                        .HasColumnType("integer");

                    b.Property<string>("pdf_report_url")
                        .HasColumnType("text");

                    b.Property<Guid?>("requested_by")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<Guid?>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("asset_form_id");

                    b.HasIndex("WOcategorytoTaskMapping_id")
                        .IsUnique();

                    b.HasIndex("asset_id");

                    b.HasIndex("pdf_report_status");

                    b.HasIndex("site_id");

                    b.HasIndex("status");

                    b.HasIndex("wo_id");

                    b.ToTable("AssetFormIO");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetFormIOBuildingMappings", b =>
                {
                    b.Property<int>("assetformiobuildings_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid?>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("formiobuilding_id")
                        .HasColumnType("integer");

                    b.Property<int?>("formiofloor_id")
                        .HasColumnType("integer");

                    b.Property<int?>("formioroom_id")
                        .HasColumnType("integer");

                    b.Property<int?>("formiosection_id")
                        .HasColumnType("integer");

                    b.HasKey("assetformiobuildings_id");

                    b.HasIndex("asset_id")
                        .IsUnique();

                    b.HasIndex("formiobuilding_id");

                    b.HasIndex("formiofloor_id");

                    b.HasIndex("formioroom_id");

                    b.HasIndex("formiosection_id");

                    b.ToTable("AssetFormIOBuildingMappings");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetIRWOImagesLabelMapping", b =>
                {
                    b.Property<Guid>("assetirwoimageslabelmapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("ir_image_label")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("s3_image_folder_name")
                        .HasColumnType("text");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<string>("visual_image_label")
                        .HasColumnType("text");

                    b.HasKey("assetirwoimageslabelmapping_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("site_id");

                    b.ToTable("AssetIRWOImagesLabelMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetInspectionReport", b =>
                {
                    b.Property<Guid>("report_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("download_link")
                        .HasColumnType("text");

                    b.Property<DateTime>("from_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int>("report_number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("to_date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("report_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("status");

                    b.ToTable("AssetInspectionReport");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetIssue", b =>
                {
                    b.Property<Guid>("asset_issue_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_form_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<string>("back_office_note")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("field_note")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_issue_linked")
                        .HasColumnType("boolean");

                    b.Property<int?>("issue_caused_id")
                        .HasColumnType("integer");

                    b.Property<string>("issue_description")
                        .HasColumnType("text");

                    b.Property<string>("issue_number")
                        .HasColumnType("text");

                    b.Property<int?>("issue_status")
                        .HasColumnType("integer");

                    b.Property<string>("issue_title")
                        .HasColumnType("text");

                    b.Property<int>("issue_type")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int?>("priority")
                        .HasColumnType("integer");

                    b.Property<string>("resolve_issue_reason")
                        .HasColumnType("text");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("wo_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("wo_line_issue_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("asset_issue_id");

                    b.HasIndex("asset_form_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("issue_status");

                    b.HasIndex("site_id");

                    b.HasIndex("wo_id");

                    b.HasIndex("wo_line_issue_id")
                        .IsUnique();

                    b.HasIndex("woonboardingassets_id");

                    b.ToTable("AssetIssue");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetIssueComments", b =>
                {
                    b.Property<Guid>("asset_issue_comments_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_issue_id")
                        .HasColumnType("uuid");

                    b.Property<string>("comment")
                        .HasColumnType("text");

                    b.Property<Guid?>("comment_user_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("comment_user_role_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.HasKey("asset_issue_comments_id");

                    b.HasIndex("asset_issue_id");

                    b.HasIndex("comment_user_id");

                    b.HasIndex("comment_user_role_id");

                    b.ToTable("AssetIssueComments");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetIssueImagesMapping", b =>
                {
                    b.Property<Guid>("asset_issue_image_mapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_issue_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<int?>("image_duration_type_id")
                        .HasColumnType("integer");

                    b.Property<string>("image_file_name")
                        .HasColumnType("text");

                    b.Property<string>("image_thumbnail_file_name")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.HasKey("asset_issue_image_mapping_id");

                    b.HasIndex("asset_issue_id");

                    b.HasIndex("site_id");

                    b.ToTable("AssetIssueImagesMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetMeterHourHistory", b =>
                {
                    b.Property<Guid>("asset_meter_hour_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<string>("company_id")
                        .HasColumnType("text");

                    b.Property<long?>("meter_hours")
                        .HasColumnType("bigint");

                    b.Property<string>("requested_by")
                        .HasColumnType("text");

                    b.Property<string>("site_id")
                        .HasColumnType("text");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("asset_meter_hour_id");

                    b.HasIndex("asset_id");

                    b.ToTable("AssetMeterHourHistory");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetNotes", b =>
                {
                    b.Property<Guid>("asset_notes_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_form_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<string>("asset_note")
                        .HasColumnType("text");

                    b.Property<string>("asset_note_added_by_user")
                        .HasColumnType("text");

                    b.Property<Guid>("asset_note_added_by_userid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("created_by")
                        .HasColumnType("uuid");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("asset_notes_id");

                    b.HasIndex("asset_form_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("site_id");

                    b.HasIndex("woonboardingassets_id");

                    b.ToTable("AssetNotes");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetPMAttachments", b =>
                {
                    b.Property<Guid>("asset_pm_attachment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_pm_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_pm_plan_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("filename")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("user_uploaded_name")
                        .HasColumnType("text");

                    b.HasKey("asset_pm_attachment_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("asset_pm_id");

                    b.HasIndex("asset_pm_plan_id");

                    b.ToTable("AssetPMAttachments");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetPMNotificationConfigurations", b =>
                {
                    b.Property<Guid>("asset_pm_notification_configuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<int>("due_at_reminder_meter_hours_status")
                        .HasColumnType("integer");

                    b.Property<int>("due_at_reminder_status")
                        .HasColumnType("integer");

                    b.Property<int>("first_reminder_before_on")
                        .HasColumnType("integer");

                    b.Property<int>("first_reminder_before_on_meter_hours")
                        .HasColumnType("integer");

                    b.Property<int>("first_reminder_before_on_meter_hours_status")
                        .HasColumnType("integer");

                    b.Property<int>("first_reminder_before_on_status")
                        .HasColumnType("integer");

                    b.Property<int>("first_reminder_before_on_type")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int>("second_reminder_before_on")
                        .HasColumnType("integer");

                    b.Property<int>("second_reminder_before_on_meter_hours")
                        .HasColumnType("integer");

                    b.Property<int>("second_reminder_before_on_meter_hours_status")
                        .HasColumnType("integer");

                    b.Property<int>("second_reminder_before_on_status")
                        .HasColumnType("integer");

                    b.Property<int>("second_reminder_before_on_type")
                        .HasColumnType("integer");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("asset_pm_notification_configuration");

                    b.HasIndex("asset_id")
                        .IsUnique();

                    b.HasIndex("due_at_reminder_meter_hours_status");

                    b.HasIndex("due_at_reminder_status");

                    b.HasIndex("first_reminder_before_on_meter_hours_status");

                    b.HasIndex("first_reminder_before_on_status")
                        .HasName("IX_AssetPMNotificationConfigurations_first_reminder_before_on~1");

                    b.HasIndex("first_reminder_before_on_type")
                        .HasName("IX_AssetPMNotificationConfigurations_first_reminder_before_on~2");

                    b.HasIndex("second_reminder_before_on_meter_hours_status");

                    b.HasIndex("second_reminder_before_on_status")
                        .HasName("IX_AssetPMNotificationConfigurations_second_reminder_before_o~1");

                    b.HasIndex("second_reminder_before_on_type")
                        .HasName("IX_AssetPMNotificationConfigurations_second_reminder_before_o~2");

                    b.HasIndex("status");

                    b.ToTable("AssetPMNotificationConfigurations");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetPMPlans", b =>
                {
                    b.Property<Guid>("asset_pm_plan_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("plan_name")
                        .HasColumnType("text");

                    b.Property<Guid>("pm_plan_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.HasKey("asset_pm_plan_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("status");

                    b.ToTable("AssetPMPlans");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetPMTasks", b =>
                {
                    b.Property<Guid>("asset_pm_task_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_pm_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_pm_plan_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid?>("pm_task_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("task_id")
                        .HasColumnType("uuid");

                    b.HasKey("asset_pm_task_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("asset_pm_id");

                    b.HasIndex("asset_pm_plan_id");

                    b.HasIndex("task_id");

                    b.ToTable("AssetPMTasks");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetPMs", b =>
                {
                    b.Property<Guid>("asset_pm_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_form_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("asset_pm_completed_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("asset_pm_plan_id")
                        .HasColumnType("uuid");

                    b.Property<string>("completed_notes")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("datetime_due_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("datetime_repeat_time_period_type")
                        .HasColumnType("integer");

                    b.Property<int?>("datetime_repeates_every")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("datetime_starting_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<bool>("is_Asset_PM_fixed")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("is_trigger_on_starting_at")
                        .HasColumnType("boolean");

                    b.Property<int?>("meter_hours_due_at")
                        .HasColumnType("integer");

                    b.Property<int?>("meter_hours_repeates_every")
                        .HasColumnType("integer");

                    b.Property<int?>("meter_hours_starting_at")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("pm_form_output_data")
                        .HasColumnType("text");

                    b.Property<Guid?>("pm_id")
                        .HasColumnType("uuid");

                    b.Property<int>("pm_trigger_by")
                        .HasColumnType("integer");

                    b.Property<int>("pm_trigger_type")
                        .HasColumnType("integer");

                    b.Property<Guid?>("service_dealer_id")
                        .HasColumnType("uuid");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.Property<Guid?>("wo_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("asset_pm_id");

                    b.HasIndex("asset_form_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("asset_pm_plan_id");

                    b.HasIndex("datetime_repeat_time_period_type");

                    b.HasIndex("pm_trigger_by");

                    b.HasIndex("pm_trigger_type");

                    b.HasIndex("service_dealer_id");

                    b.HasIndex("status");

                    b.HasIndex("wo_id");

                    b.HasIndex("woonboardingassets_id")
                        .IsUnique();

                    b.ToTable("AssetPMs");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetPMsTriggerConditionMapping", b =>
                {
                    b.Property<Guid>("asset_pm_trigger_condition_mapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_pm_id")
                        .HasColumnType("uuid");

                    b.Property<int>("condition_type_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<int?>("datetime_repeat_time_period_type")
                        .HasColumnType("integer");

                    b.Property<int?>("datetime_repeates_every")
                        .HasColumnType("integer");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.HasKey("asset_pm_trigger_condition_mapping_id");

                    b.HasIndex("asset_pm_id");

                    b.HasIndex("datetime_repeat_time_period_type");

                    b.HasIndex("site_id");

                    b.ToTable("AssetPMsTriggerConditionMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetParentHierarchyMapping", b =>
                {
                    b.Property<Guid>("asset_parent_hierrachy_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<int?>("fed_by_usage_type_id")
                        .HasColumnType("integer");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("length")
                        .HasColumnType("text");

                    b.Property<Guid?>("parent_asset_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<string>("style")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<Guid?>("via_subcomponent_asset_id")
                        .HasColumnType("uuid");

                    b.HasKey("asset_parent_hierrachy_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("site_id");

                    b.ToTable("AssetParentHierarchyMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetProfileImages", b =>
                {
                    b.Property<Guid>("asset_profile_images_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<string>("asset_photo")
                        .HasColumnType("text");

                    b.Property<int>("asset_photo_type")
                        .HasColumnType("integer");

                    b.Property<string>("asset_thumbnail_photo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("pm_photo_caption")
                        .HasColumnType("text");

                    b.HasKey("asset_profile_images_id");

                    b.HasIndex("asset_id");

                    b.ToTable("AssetProfileImages");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetReplacementMapping", b =>
                {
                    b.Property<Guid>("asset_replacement_mapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("replaced_asset_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.HasKey("asset_replacement_mapping_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("site_id");

                    b.ToTable("AssetReplacementMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetSubLevelcomponentMapping", b =>
                {
                    b.Property<Guid>("asset_sublevelcomponent_mapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<string>("circuit")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("image_name")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("sublevelcomponent_asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.HasKey("asset_sublevelcomponent_mapping_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("site_id");

                    b.ToTable("AssetSubLevelcomponentMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetTasks", b =>
                {
                    b.Property<Guid>("asset_task_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<Guid>("task_id")
                        .HasColumnType("uuid");

                    b.HasKey("asset_task_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("status");

                    b.HasIndex("task_id");

                    b.ToTable("AssetTasks");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetTopLevelcomponentMapping", b =>
                {
                    b.Property<Guid>("asset_toplevelcomponent_mapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("toplevelcomponent_asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.HasKey("asset_toplevelcomponent_mapping_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("site_id");

                    b.ToTable("AssetTopLevelcomponentMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetTransactionHistory", b =>
                {
                    b.Property<Guid>("asseet_txn_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<List<AssetsValueJsonObject>>("attributeValues")
                        .HasColumnType("jsonb");

                    b.Property<string>("comapny_id")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("inspection_form_id")
                        .HasColumnType("text");

                    b.Property<string>("inspection_id")
                        .HasColumnType("text");

                    b.Property<string>("manager_id")
                        .HasColumnType("text");

                    b.Property<long?>("meter_hours")
                        .HasColumnType("bigint");

                    b.Property<string>("operator_id")
                        .HasColumnType("text");

                    b.Property<int?>("shift")
                        .HasColumnType("integer");

                    b.Property<string>("site_id")
                        .HasColumnType("text");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.HasKey("asseet_txn_id");

                    b.HasIndex("asset_id");

                    b.ToTable("AssetTransactionHistory");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetType", b =>
                {
                    b.Property<int>("asset_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("isArchive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("asset_type_id");

                    b.ToTable("AssetTypes");
                });

            modelBuilder.Entity("Jarvis.db.Models.Assethierarchy", b =>
                {
                    b.Property<int>("asset_hierarchy_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("asset_hierarchy_name")
                        .HasColumnType("text");

                    b.HasKey("asset_hierarchy_id");

                    b.ToTable("Assethierarchy");
                });

            modelBuilder.Entity("Jarvis.db.Models.CancelReasonMaster", b =>
                {
                    b.Property<int>("reason_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("reason_id");

                    b.ToTable("CancelReasonMaster");
                });

            modelBuilder.Entity("Jarvis.db.Models.ClientCompany", b =>
                {
                    b.Property<Guid>("client_company_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("client_company_name")
                        .HasColumnType("text");

                    b.Property<string>("clientcompany_code")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("logo_url")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("owner")
                        .HasColumnType("text");

                    b.Property<string>("owner_address")
                        .HasColumnType("text");

                    b.Property<Guid?>("parent_company_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.HasKey("client_company_id");

                    b.HasIndex("parent_company_id");

                    b.HasIndex("status");

                    b.ToTable("ClientCompany");
                });

            modelBuilder.Entity("Jarvis.db.Models.ClusterDiagramPDFSiteMapping", b =>
                {
                    b.Property<int>("cluster_diagram_pdf_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("file_name")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("upload_status")
                        .HasColumnType("integer");

                    b.HasKey("cluster_diagram_pdf_id");

                    b.HasIndex("site_id")
                        .IsUnique();

                    b.ToTable("ClusterDiagramPDFSiteMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.Company", b =>
                {
                    b.Property<Guid>("company_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("access_token")
                        .HasColumnType("text");

                    b.Property<string>("autodesk_app_name")
                        .HasColumnType("text");

                    b.Property<string>("client_id")
                        .HasColumnType("text");

                    b.Property<string>("client_secret")
                        .HasColumnType("text");

                    b.Property<string>("company_code")
                        .HasColumnType("text");

                    b.Property<string>("company_logo")
                        .HasColumnType("text");

                    b.Property<string>("company_name")
                        .HasColumnType("text");

                    b.Property<string>("company_thumbnail_logo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("domain_name")
                        .HasColumnType("text");

                    b.Property<string>("expires_in")
                        .HasColumnType("text");

                    b.Property<string>("identity_pool_id")
                        .HasColumnType("text");

                    b.Property<bool>("isCalibrationDateEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("project_id")
                        .HasColumnType("text");

                    b.Property<string>("redirect_uri")
                        .HasColumnType("text");

                    b.Property<string>("refresh_token")
                        .HasColumnType("text");

                    b.Property<string>("region")
                        .HasColumnType("text");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.Property<string>("token_type")
                        .HasColumnType("text");

                    b.Property<string>("user_pool_id")
                        .HasColumnType("text");

                    b.Property<string>("user_pool_web_client_id")
                        .HasColumnType("text");

                    b.HasKey("company_id");

                    b.HasIndex("status");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Jarvis.db.Models.CompanyPMNotificationConfigurations", b =>
                {
                    b.Property<Guid>("company_pm_notification_configuration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<int>("due_at_reminder_meter_hours_status")
                        .HasColumnType("integer");

                    b.Property<int>("due_at_reminder_status")
                        .HasColumnType("integer");

                    b.Property<int>("first_reminder_before_on")
                        .HasColumnType("integer");

                    b.Property<int>("first_reminder_before_on_meter_hours")
                        .HasColumnType("integer");

                    b.Property<int>("first_reminder_before_on_meter_hours_status")
                        .HasColumnType("integer");

                    b.Property<int>("first_reminder_before_on_status")
                        .HasColumnType("integer");

                    b.Property<int>("first_reminder_before_on_type")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int>("second_reminder_before_on")
                        .HasColumnType("integer");

                    b.Property<int>("second_reminder_before_on_meter_hours")
                        .HasColumnType("integer");

                    b.Property<int>("second_reminder_before_on_meter_hours_status")
                        .HasColumnType("integer");

                    b.Property<int>("second_reminder_before_on_status")
                        .HasColumnType("integer");

                    b.Property<int>("second_reminder_before_on_type")
                        .HasColumnType("integer");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("company_pm_notification_configuration");

                    b.HasIndex("company_id");

                    b.HasIndex("due_at_reminder_meter_hours_status");

                    b.HasIndex("due_at_reminder_status");

                    b.HasIndex("first_reminder_before_on_meter_hours_status");

                    b.HasIndex("first_reminder_before_on_status")
                        .HasName("IX_CompanyPMNotificationConfigurations_first_reminder_before_~1");

                    b.HasIndex("first_reminder_before_on_type")
                        .HasName("IX_CompanyPMNotificationConfigurations_first_reminder_before_~2");

                    b.HasIndex("second_reminder_before_on_meter_hours_status");

                    b.HasIndex("second_reminder_before_on_status")
                        .HasName("IX_CompanyPMNotificationConfigurations_second_reminder_before~1");

                    b.HasIndex("second_reminder_before_on_type")
                        .HasName("IX_CompanyPMNotificationConfigurations_second_reminder_before~2");

                    b.HasIndex("status");

                    b.ToTable("CompanyPMNotificationConfigurations");
                });

            modelBuilder.Entity("Jarvis.db.Models.CompletedPMTriggers", b =>
                {
                    b.Property<Guid>("completed_trigger_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_pm_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("pm_trigger_id")
                        .HasColumnType("uuid");

                    b.HasKey("completed_trigger_id");

                    b.HasIndex("asset_pm_id");

                    b.HasIndex("pm_trigger_id");

                    b.ToTable("CompletedPMTriggers");
                });

            modelBuilder.Entity("Jarvis.db.Models.DashboardOutstandingIssues", b =>
                {
                    b.Property<Guid>("site_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<List<ReportJsonData>>("data")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("site_id");

                    b.ToTable("DashboardOutstandingIssues");
                });

            modelBuilder.Entity("Jarvis.db.Models.DeviceInfo", b =>
                {
                    b.Property<long>("device_info_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("app_version")
                        .HasColumnType("text");

                    b.Property<Guid?>("approved_by")
                        .HasColumnType("uuid");

                    b.Property<string>("brand")
                        .HasColumnType("text");

                    b.Property<Guid?>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("device_code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("device_uuid")
                        .HasColumnType("uuid");

                    b.Property<bool>("is_approved")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("last_sync_site_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("last_sync_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("mac_address")
                        .HasColumnType("text");

                    b.Property<string>("model")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("os")
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.Property<string>("version")
                        .HasColumnType("text");

                    b.HasKey("device_info_id");

                    b.ToTable("DeviceInfo");
                });

            modelBuilder.Entity("Jarvis.db.Models.EmailNotificationStatusUpdate", b =>
                {
                    b.Property<Guid>("notification_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("from")
                        .HasColumnType("text");

                    b.Property<DateTime?>("retry_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("status")
                        .HasColumnType("text");

                    b.Property<string>("subject")
                        .HasColumnType("text");

                    b.Property<DateTime>("submitted_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("to")
                        .HasColumnType("text");

                    b.HasKey("notification_id");

                    b.ToTable("EmailNotificationStatusUpdate");
                });

            modelBuilder.Entity("Jarvis.db.Models.Equipment", b =>
                {
                    b.Property<Guid>("equipment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("calibration_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("calibration_interval")
                        .HasColumnType("integer");

                    b.Property<int?>("calibration_status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("equipment_name")
                        .HasColumnType("text");

                    b.Property<string>("equipment_number")
                        .HasColumnType("text");

                    b.Property<bool>("isarchive")
                        .HasColumnType("boolean");

                    b.Property<string>("manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("model_number")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("serial_number")
                        .HasColumnType("text");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.HasKey("equipment_id");

                    b.HasIndex("site_id");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIOAuthToken", b =>
                {
                    b.Property<int>("formio_token_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("formio_token")
                        .HasColumnType("text");

                    b.HasKey("formio_token_id");

                    b.ToTable("FormIOAuthToken");
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIOBuildings", b =>
                {
                    b.Property<int>("formiobuilding_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("formio_building_name")
                        .HasColumnType("text");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.HasKey("formiobuilding_id");

                    b.ToTable("FormIOBuildings");
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIOFloors", b =>
                {
                    b.Property<int>("formiofloor_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("formio_floor_name")
                        .HasColumnType("text");

                    b.Property<int?>("formiobuilding_id")
                        .HasColumnType("integer");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.HasKey("formiofloor_id");

                    b.HasIndex("formiobuilding_id");

                    b.ToTable("FormIOFloors");
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIOInsulationResistanceTestMapping", b =>
                {
                    b.Property<Guid>("FormIOInsulationResistanceTestMapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("IRAcrossPoleAsFound1")
                        .HasColumnType("text");

                    b.Property<string>("IRAcrossPoleAsFound2")
                        .HasColumnType("text");

                    b.Property<string>("IRAcrossPoleAsFound3")
                        .HasColumnType("text");

                    b.Property<string>("IRPoletoPoleAsFound1")
                        .HasColumnType("text");

                    b.Property<string>("IRPoletoPoleAsFound2")
                        .HasColumnType("text");

                    b.Property<string>("IRPoletoPoleAsFound3")
                        .HasColumnType("text");

                    b.Property<Guid?>("asset_form_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_archived")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.HasKey("FormIOInsulationResistanceTestMapping_id");

                    b.HasIndex("asset_form_id")
                        .IsUnique();

                    b.ToTable("FormIOInsulationResistanceTestMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIOLocationNotes", b =>
                {
                    b.Property<int>("FormIOLocationNotes_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("formiobuilding_id")
                        .HasColumnType("integer");

                    b.Property<int?>("formiofloor_id")
                        .HasColumnType("integer");

                    b.Property<int?>("formioroom_id")
                        .HasColumnType("integer");

                    b.Property<int?>("formiosection_id")
                        .HasColumnType("integer");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.HasKey("FormIOLocationNotes_id");

                    b.HasIndex("formiobuilding_id");

                    b.HasIndex("formiofloor_id");

                    b.HasIndex("formioroom_id");

                    b.HasIndex("formiosection_id")
                        .IsUnique();

                    b.ToTable("FormIOLocationNotes");
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIORooms", b =>
                {
                    b.Property<int>("formioroom_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("formio_room_name")
                        .HasColumnType("text");

                    b.Property<int?>("formiofloor_id")
                        .HasColumnType("integer");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.HasKey("formioroom_id");

                    b.HasIndex("formiofloor_id");

                    b.ToTable("FormIORooms");
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIOSections", b =>
                {
                    b.Property<int>("formiosection_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("formio_section_name")
                        .HasColumnType("text");

                    b.Property<int?>("formioroom_id")
                        .HasColumnType("integer");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.HasKey("formiosection_id");

                    b.HasIndex("formioroom_id");

                    b.ToTable("FormIOSections");
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIOType", b =>
                {
                    b.Property<int>("form_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("form_type_name")
                        .HasColumnType("text");

                    b.Property<bool>("isarchive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.HasKey("form_type_id");

                    b.ToTable("FormIOType");
                });

            modelBuilder.Entity("Jarvis.db.Models.IRScanWOImageFileMapping", b =>
                {
                    b.Property<Guid>("irscanwoimagefilemapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("img_file_name")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_img_attached")
                        .HasColumnType("boolean");

                    b.Property<string>("manual_wo_number")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<Guid>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("irscanwoimagefilemapping_id");

                    b.HasIndex("wo_id");

                    b.ToTable("IRScanWOImageFileMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.IRWOImagesLabelMapping", b =>
                {
                    b.Property<Guid>("irwoimagelabelmapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("ir_image_label")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("s3_image_folder_name")
                        .HasColumnType("text");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<string>("visual_image_label")
                        .HasColumnType("text");

                    b.Property<Guid?>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("irwoimagelabelmapping_id");

                    b.HasIndex("site_id");

                    b.HasIndex("woonboardingassets_id");

                    b.ToTable("IRWOImagesLabelMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.Inspection", b =>
                {
                    b.Property<Guid>("inspection_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<List<AssetsValueJsonObject>>("attribute_values")
                        .HasColumnType("jsonb");

                    b.Property<string>("company_id")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("datetime_requested")
                        .HasColumnType("timestamp without time zone");

                    b.Property<ImagesListObject>("image_list")
                        .HasColumnType("jsonb");

                    b.Property<bool>("is_comment_important")
                        .HasColumnType("boolean");

                    b.Property<string>("manager_id")
                        .HasColumnType("text");

                    b.Property<string>("manager_notes")
                        .HasColumnType("text");

                    b.Property<long>("meter_hours")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid?>("operator_id")
                        .HasColumnType("uuid");

                    b.Property<string>("operator_notes")
                        .HasColumnType("text");

                    b.Property<int>("shift")
                        .HasColumnType("integer");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("inspection_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("operator_id");

                    b.HasIndex("site_id");

                    b.HasIndex("status");

                    b.ToTable("Inspection");
                });

            modelBuilder.Entity("Jarvis.db.Models.InspectionAttributeCategory", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("category_id");

                    b.ToTable("InspectionAttributeCategory");
                });

            modelBuilder.Entity("Jarvis.db.Models.InspectionFormAttributes", b =>
                {
                    b.Property<Guid>("attributes_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("category_id")
                        .HasColumnType("integer");

                    b.Property<string>("company_id")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("site_id")
                        .HasColumnType("text");

                    b.Property<AttributeValueJsonObject[]>("value_parameters")
                        .HasColumnType("jsonb");

                    b.Property<int>("values_type")
                        .HasColumnType("integer");

                    b.HasKey("attributes_id");

                    b.HasIndex("category_id");

                    b.ToTable("InspectionFormAttributes");
                });

            modelBuilder.Entity("Jarvis.db.Models.InspectionFormTypes", b =>
                {
                    b.Property<Guid>("inspection_form_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("site_id")
                        .HasColumnType("text");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.HasKey("inspection_form_type_id");

                    b.HasIndex("company_id");

                    b.ToTable("InspectionFormTypes");
                });

            modelBuilder.Entity("Jarvis.db.Models.InspectionForms", b =>
                {
                    b.Property<Guid>("inspection_form_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<FormAttributesJsonObject[]>("form_attributes")
                        .HasColumnType("jsonb");

                    b.Property<int?>("form_type_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("site_id")
                        .HasColumnType("text");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.HasKey("inspection_form_id");

                    b.HasIndex("company_id");

                    b.HasIndex("form_type_id");

                    b.HasIndex("status");

                    b.ToTable("InspectionForms");
                });

            modelBuilder.Entity("Jarvis.db.Models.InspectionTemplateAssetClass", b =>
                {
                    b.Property<Guid>("inspectiontemplate_asset_class_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("asset_class_code")
                        .HasColumnType("text");

                    b.Property<string>("asset_class_name")
                        .HasColumnType("text");

                    b.Property<int?>("asset_expected_usefull_life")
                        .HasColumnType("integer");

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("form_nameplate_info")
                        .HasColumnType("text");

                    b.Property<int?>("form_type_id")
                        .HasColumnType("integer");

                    b.Property<bool>("isarchive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.HasKey("inspectiontemplate_asset_class_id");

                    b.HasIndex("company_id");

                    b.HasIndex("form_type_id");

                    b.ToTable("InspectionTemplateAssetClass");
                });

            modelBuilder.Entity("Jarvis.db.Models.InspectionsTemplateFormIO", b =>
                {
                    b.Property<Guid>("form_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("asset_class_form_properties")
                        .HasColumnType("text");

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("dynamic_fields")
                        .HasColumnType("text");

                    b.Property<string>("dynamic_nameplate_fields")
                        .HasColumnType("text");

                    b.Property<string>("form_data")
                        .HasColumnType("text");

                    b.Property<string>("form_description")
                        .HasColumnType("text");

                    b.Property<string>("form_name")
                        .HasColumnType("text");

                    b.Property<string>("form_output_data_template")
                        .HasColumnType("text");

                    b.Property<string>("form_type")
                        .HasColumnType("text");

                    b.Property<int?>("form_type_id")
                        .HasColumnType("integer");

                    b.Property<Guid?>("inspectiontemplate_asset_class_id")
                        .HasColumnType("uuid");

                    b.Property<bool>("is_master_form")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.Property<string>("work_procedure")
                        .HasColumnType("text");

                    b.HasKey("form_id");

                    b.HasIndex("form_type_id");

                    b.HasIndex("inspectiontemplate_asset_class_id");

                    b.HasIndex("status");

                    b.ToTable("InspectionsTemplateFormIO");
                });

            modelBuilder.Entity("Jarvis.db.Models.Issue", b =>
                {
                    b.Property<Guid>("issue_uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("attribute_id")
                        .HasColumnType("uuid");

                    b.Property<AssetsValueJsonObject[]>("attributes_value")
                        .HasColumnType("jsonb");

                    b.Property<DateTime>("checkout_datetime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<List<CommentJsonObject>>("comments")
                        .HasColumnType("jsonb");

                    b.Property<string>("company_id")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<Guid>("inspection_id")
                        .HasColumnType("uuid");

                    b.Property<string>("internal_asset_id")
                        .HasColumnType("text");

                    b.Property<long?>("issue_number")
                        .HasColumnType("bigint");

                    b.Property<string>("maintainence_staff_id")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid?>("mr_id")
                        .HasColumnType("uuid");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<int>("priority")
                        .HasColumnType("integer");

                    b.Property<DateTime>("requested_datetime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("issue_uuid");

                    b.HasIndex("asset_id");

                    b.HasIndex("attribute_id");

                    b.HasIndex("inspection_id");

                    b.HasIndex("mr_id");

                    b.HasIndex("site_id");

                    b.HasIndex("status");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("Jarvis.db.Models.IssueRecord", b =>
                {
                    b.Property<Guid>("issue_record_uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("attrubute_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("checkout_datetime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("fixed_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("fixed_datetime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("inspection_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("issue_uuid")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("requested_datetime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("issue_record_uuid");

                    b.HasIndex("asset_id");

                    b.HasIndex("attrubute_id");

                    b.HasIndex("inspection_id");

                    b.HasIndex("issue_uuid")
                        .IsUnique();

                    b.HasIndex("status");

                    b.ToTable("IssueRecord");
                });

            modelBuilder.Entity("Jarvis.db.Models.IssueStatus", b =>
                {
                    b.Property<Guid>("issue_status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("issue_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("issue_status_id");

                    b.HasIndex("issue_id");

                    b.ToTable("IssueStatus");
                });

            modelBuilder.Entity("Jarvis.db.Models.LanguageMaster", b =>
                {
                    b.Property<int>("language_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("is_active")
                        .HasColumnType("integer");

                    b.Property<string>("language_name")
                        .HasColumnType("text");

                    b.HasKey("language_id");

                    b.HasIndex("is_active");

                    b.ToTable("LanguageMaster");
                });

            modelBuilder.Entity("Jarvis.db.Models.MaintenanceReqCancelRequests", b =>
                {
                    b.Property<Guid>("mr_cancel_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("mr_id")
                        .HasColumnType("uuid");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<int>("reason_id")
                        .HasColumnType("integer");

                    b.HasKey("mr_cancel_id");

                    b.HasIndex("mr_id");

                    b.HasIndex("reason_id");

                    b.ToTable("MaintenanceReqCancelRequests");
                });

            modelBuilder.Entity("Jarvis.db.Models.MaintenanceRequests", b =>
                {
                    b.Property<Guid>("mr_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int>("mr_type")
                        .HasColumnType("integer");

                    b.Property<Guid?>("mr_type_id")
                        .HasColumnType("uuid");

                    b.Property<int>("priority")
                        .HasColumnType("integer");

                    b.Property<Guid>("requested_by")
                        .HasColumnType("uuid");

                    b.Property<string>("resolve_reason")
                        .HasColumnType("text");

                    b.Property<DateTime?>("resolved_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.Property<Guid?>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("mr_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("mr_type");

                    b.HasIndex("priority");

                    b.HasIndex("site_id");

                    b.HasIndex("status");

                    b.HasIndex("wo_id");

                    b.ToTable("MaintenanceRequests");
                });

            modelBuilder.Entity("Jarvis.db.Models.ManagerPMNotificationConfiguration", b =>
                {
                    b.Property<Guid>("manager_notification_conf_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("is_disabled")
                        .HasColumnType("boolean");

                    b.Property<Guid>("pm_trigger_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("manager_notification_conf_id");

                    b.ToTable("ManagerPMNotificationConfiguration");
                });

            modelBuilder.Entity("Jarvis.db.Models.MasterData", b =>
                {
                    b.Property<int>("master_data_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("meter_hours")
                        .HasColumnType("text");

                    b.HasKey("master_data_id");

                    b.ToTable("MasterData");
                });

            modelBuilder.Entity("Jarvis.db.Models.MobileAppVersion", b =>
                {
                    b.Property<int>("mobileappversion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("device_brand")
                        .HasColumnType("integer");

                    b.Property<string>("force_to_update_app_version")
                        .HasColumnType("text");

                    b.Property<string>("store_app_version")
                        .HasColumnType("text");

                    b.HasKey("mobileappversion_id");

                    b.ToTable("MobileAppVersion");
                });

            modelBuilder.Entity("Jarvis.db.Models.NotificationData", b =>
                {
                    b.Property<Guid>("notification_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("OS")
                        .HasColumnType("text");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("data")
                        .HasColumnType("jsonb");

                    b.Property<string>("device_key")
                        .HasColumnType("text");

                    b.Property<string>("heading")
                        .HasColumnType("text");

                    b.Property<string>("message")
                        .HasColumnType("text");

                    b.Property<int>("notification_status")
                        .HasColumnType("integer");

                    b.Property<int>("notification_type")
                        .HasColumnType("integer");

                    b.Property<string>("ref_id")
                        .HasColumnType("text");

                    b.Property<DateTime>("sendDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<string>("target_role")
                        .HasColumnType("text");

                    b.Property<int>("target_type")
                        .HasColumnType("integer");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("notification_id");

                    b.ToTable("NotificationData");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMAttachments", b =>
                {
                    b.Property<Guid>("pm_attachment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("filename")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("pm_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("pm_plan_id")
                        .HasColumnType("uuid");

                    b.Property<string>("user_uploaded_name")
                        .HasColumnType("text");

                    b.HasKey("pm_attachment_id");

                    b.HasIndex("pm_id");

                    b.HasIndex("pm_plan_id");

                    b.ToTable("PMAttachments");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMCategory", b =>
                {
                    b.Property<Guid>("pm_category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("category_code")
                        .HasColumnType("text");

                    b.Property<string>("category_name")
                        .HasColumnType("text");

                    b.Property<Guid?>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<Guid?>("inspectiontemplate_asset_class_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.HasKey("pm_category_id");

                    b.HasIndex("company_id");

                    b.HasIndex("inspectiontemplate_asset_class_id")
                        .IsUnique();

                    b.HasIndex("status");

                    b.ToTable("PMCategory");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMItemMasterForms", b =>
                {
                    b.Property<Guid>("pmitemmasterform_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("asset_class_code")
                        .HasColumnType("text");

                    b.Property<string>("asset_class_name")
                        .HasColumnType("text");

                    b.Property<Guid?>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("form_json")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("plan_name")
                        .HasColumnType("text");

                    b.Property<string>("pm_title")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("pmitemmasterform_id");

                    b.HasIndex("company_id");

                    b.ToTable("PMItemMasterForms");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMPlans", b =>
                {
                    b.Property<Guid>("pm_plan_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_default_pm_plan")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("plan_name")
                        .HasColumnType("text");

                    b.Property<Guid>("pm_category_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.HasKey("pm_plan_id");

                    b.HasIndex("pm_category_id");

                    b.HasIndex("status");

                    b.ToTable("PMPlans");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMTasks", b =>
                {
                    b.Property<Guid>("pm_task_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("pm_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("pm_plan_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("task_id")
                        .HasColumnType("uuid");

                    b.HasKey("pm_task_id");

                    b.HasIndex("pm_id");

                    b.HasIndex("pm_plan_id");

                    b.HasIndex("task_id");

                    b.ToTable("PMTasks");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMTriggers", b =>
                {
                    b.Property<Guid>("pm_trigger_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_pm_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("asset_pm_status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("datetime_when_pm_due")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("due_datetime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("due_meter_hours")
                        .HasColumnType("integer");

                    b.Property<int?>("estimated_due_date_meter_hour")
                        .HasColumnType("integer");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<long?>("meter_hours_when_pm_due")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<int?>("total_est_time_hours")
                        .HasColumnType("integer");

                    b.Property<int?>("total_est_time_minutes")
                        .HasColumnType("integer");

                    b.HasKey("pm_trigger_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("asset_pm_id");

                    b.HasIndex("asset_pm_status");

                    b.HasIndex("status");

                    b.ToTable("PMTriggers");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMTriggersRemarks", b =>
                {
                    b.Property<Guid>("pm_triggers_remark_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("comments")
                        .HasColumnType("text");

                    b.Property<int>("completed_at_meter_hours")
                        .HasColumnType("integer");

                    b.Property<int>("completed_in_hours")
                        .HasColumnType("integer");

                    b.Property<int>("completed_in_minutes")
                        .HasColumnType("integer");

                    b.Property<DateTime>("completed_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("pm_trigger_id")
                        .HasColumnType("uuid");

                    b.HasKey("pm_triggers_remark_id");

                    b.HasIndex("pm_trigger_id")
                        .IsUnique();

                    b.ToTable("PMTriggersRemarks");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMTriggersTasks", b =>
                {
                    b.Property<Guid>("trigger_task_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_pm_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("asset_pm_task_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("pm_trigger_id")
                        .HasColumnType("uuid");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<Guid>("task_id")
                        .HasColumnType("uuid");

                    b.HasKey("trigger_task_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("asset_pm_id");

                    b.HasIndex("asset_pm_task_id");

                    b.HasIndex("pm_trigger_id");

                    b.HasIndex("status");

                    b.HasIndex("task_id");

                    b.ToTable("PMTriggersTasks");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMs", b =>
                {
                    b.Property<Guid>("pm_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("datetime_due_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("datetime_repeat_time_period_type")
                        .HasColumnType("integer");

                    b.Property<int?>("datetime_repeates_every")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("datetime_starting_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<bool?>("is_trigger_on_starting_at")
                        .HasColumnType("boolean");

                    b.Property<int?>("meter_hours_due_at")
                        .HasColumnType("integer");

                    b.Property<int?>("meter_hours_repeates_every")
                        .HasColumnType("integer");

                    b.Property<int?>("meter_hours_starting_at")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int?>("pm_inspection_type_id")
                        .HasColumnType("integer");

                    b.Property<Guid>("pm_plan_id")
                        .HasColumnType("uuid");

                    b.Property<int>("pm_trigger_by")
                        .HasColumnType("integer");

                    b.Property<int>("pm_trigger_type")
                        .HasColumnType("integer");

                    b.Property<Guid?>("service_dealer_id")
                        .HasColumnType("uuid");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("pm_id");

                    b.HasIndex("datetime_repeat_time_period_type");

                    b.HasIndex("pm_plan_id");

                    b.HasIndex("pm_trigger_by");

                    b.HasIndex("pm_trigger_type");

                    b.HasIndex("service_dealer_id");

                    b.HasIndex("status");

                    b.ToTable("PMs");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMsTriggerConditionMapping", b =>
                {
                    b.Property<Guid>("pm_trigger_condition_mapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("condition_type_id")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<int?>("datetime_repeat_time_period_type")
                        .HasColumnType("integer");

                    b.Property<int?>("datetime_repeates_every")
                        .HasColumnType("integer");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("pm_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.HasKey("pm_trigger_condition_mapping_id");

                    b.HasIndex("datetime_repeat_time_period_type");

                    b.HasIndex("pm_id");

                    b.HasIndex("site_id");

                    b.ToTable("PMsTriggerConditionMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.PreferLanguageMaster", b =>
                {
                    b.Property<int>("prefer_lang_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("key_name")
                        .HasColumnType("text");

                    b.Property<string>("spanish_name")
                        .HasColumnType("text");

                    b.HasKey("prefer_lang_id");

                    b.ToTable("PreferLanguageMaster");
                });

            modelBuilder.Entity("Jarvis.db.Models.RecordSyncInformation", b =>
                {
                    b.Property<long>("sync_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("device_battery_percentage")
                        .HasColumnType("text");

                    b.Property<long>("device_info_id")
                        .HasColumnType("bigint");

                    b.Property<string>("device_latitude")
                        .HasColumnType("text");

                    b.Property<string>("device_longitude")
                        .HasColumnType("text");

                    b.Property<Guid>("device_uuid")
                        .HasColumnType("uuid");

                    b.Property<bool>("is_inspection")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_workorder")
                        .HasColumnType("boolean");

                    b.Property<string>("mac_address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("request_id")
                        .HasColumnType("text");

                    b.Property<string>("request_model")
                        .HasColumnType("text");

                    b.HasKey("sync_id");

                    b.HasIndex("device_info_id");

                    b.ToTable("RecordSyncInformation");
                });

            modelBuilder.Entity("Jarvis.db.Models.ResetPasswordToken", b =>
                {
                    b.Property<int>("token_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<bool>("is_used")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("token")
                        .HasColumnType("text");

                    b.Property<DateTime?>("used_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("token_id");

                    b.HasIndex("user_id");

                    b.ToTable("ResetPasswordToken");
                });

            modelBuilder.Entity("Jarvis.db.Models.Role", b =>
                {
                    b.Property<Guid>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("role_id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Jarvis.db.Models.SentPMNotification", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<Guid>("manager_id")
                        .HasColumnType("uuid");

                    b.Property<int>("notification_type")
                        .HasColumnType("integer");

                    b.Property<Guid>("trigger_id")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.ToTable("SentPMNotification");
                });

            modelBuilder.Entity("Jarvis.db.Models.ServiceDealers", b =>
                {
                    b.Property<Guid>("service_dealer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.HasKey("service_dealer_id");

                    b.HasIndex("status");

                    b.ToTable("ServiceDealers");
                });

            modelBuilder.Entity("Jarvis.db.Models.Sites", b =>
                {
                    b.Property<Guid>("site_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("client_company_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("customer")
                        .HasColumnType("text");

                    b.Property<string>("customer_address")
                        .HasColumnType("text");

                    b.Property<bool>("isAddAssetClassEnabled")
                        .HasColumnType("boolean");

                    b.Property<bool>("isAutoApprove")
                        .HasColumnType("boolean");

                    b.Property<bool>("isManagerNotes")
                        .HasColumnType("boolean");

                    b.Property<string>("location")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<bool>("showHideApprove")
                        .HasColumnType("boolean");

                    b.Property<string>("site_code")
                        .HasColumnType("text");

                    b.Property<string>("site_name")
                        .HasColumnType("text");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.Property<string>("timezone")
                        .HasColumnType("text");

                    b.HasKey("site_id");

                    b.HasIndex("client_company_id");

                    b.HasIndex("company_id");

                    b.HasIndex("status");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("Jarvis.db.Models.StatusMaster", b =>
                {
                    b.Property<int>("status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("status_name")
                        .HasColumnType("text");

                    b.Property<int>("status_type_id")
                        .HasColumnType("integer");

                    b.HasKey("status_id");

                    b.HasIndex("status_type_id");

                    b.ToTable("StatusMasters");
                });

            modelBuilder.Entity("Jarvis.db.Models.StatusTypes", b =>
                {
                    b.Property<int>("status_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("status_type_name")
                        .HasColumnType("text");

                    b.HasKey("status_type_id");

                    b.ToTable("StatusTypes");
                });

            modelBuilder.Entity("Jarvis.db.Models.Tasks", b =>
                {
                    b.Property<Guid>("task_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<Guid?>("form_id")
                        .HasColumnType("uuid");

                    b.Property<double?>("hourly_rate")
                        .HasColumnType("double precision");

                    b.Property<bool>("isArchive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<long>("task_code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("task_est_display")
                        .HasColumnType("text");

                    b.Property<int>("task_est_hours")
                        .HasColumnType("integer");

                    b.Property<int>("task_est_minutes")
                        .HasColumnType("integer");

                    b.Property<string>("task_title")
                        .HasColumnType("text");

                    b.HasKey("task_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("form_id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Jarvis.db.Models.TempFormIOBuildings", b =>
                {
                    b.Property<Guid>("temp_formiobuilding_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("formiobuilding_id")
                        .HasColumnType("integer");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<string>("temp_formio_building_name")
                        .HasColumnType("text");

                    b.Property<Guid>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("temp_formiobuilding_id");

                    b.HasIndex("formiobuilding_id");

                    b.HasIndex("wo_id");

                    b.ToTable("TempFormIOBuildings");
                });

            modelBuilder.Entity("Jarvis.db.Models.TempFormIOFloors", b =>
                {
                    b.Property<Guid>("temp_formiofloor_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("formiofloor_id")
                        .HasColumnType("integer");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<string>("temp_formio_floor_name")
                        .HasColumnType("text");

                    b.Property<Guid?>("temp_formiobuilding_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("temp_formiofloor_id");

                    b.HasIndex("formiofloor_id");

                    b.HasIndex("temp_formiobuilding_id");

                    b.HasIndex("wo_id");

                    b.ToTable("TempFormIOFloors");
                });

            modelBuilder.Entity("Jarvis.db.Models.TempFormIORooms", b =>
                {
                    b.Property<Guid>("temp_formioroom_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("formioroom_id")
                        .HasColumnType("integer");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<string>("temp_formio_room_name")
                        .HasColumnType("text");

                    b.Property<Guid?>("temp_formiofloor_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("temp_formioroom_id");

                    b.HasIndex("formioroom_id");

                    b.HasIndex("temp_formiofloor_id");

                    b.HasIndex("wo_id");

                    b.ToTable("TempFormIORooms");
                });

            modelBuilder.Entity("Jarvis.db.Models.TempFormIOSections", b =>
                {
                    b.Property<Guid>("temp_formiosection_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("formiosection_id")
                        .HasColumnType("integer");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<string>("temp_formio_section_name")
                        .HasColumnType("text");

                    b.Property<Guid?>("temp_formioroom_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("temp_formiosection_id");

                    b.HasIndex("formiosection_id");

                    b.HasIndex("temp_formioroom_id");

                    b.HasIndex("wo_id");

                    b.ToTable("TempFormIOSections");
                });

            modelBuilder.Entity("Jarvis.db.Models.User", b =>
                {
                    b.Property<Guid>("uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ac_active_client_company")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ac_active_company")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ac_active_role_app")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ac_active_role_web")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ac_active_site")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ac_default_client_company")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ac_default_company")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ac_default_role_app")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ac_default_role_web")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ac_default_site")
                        .HasColumnType("uuid");

                    b.Property<Guid>("barcode_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<bool>("email_notification_status")
                        .HasColumnType("boolean");

                    b.Property<int?>("executive_report_status")
                        .HasColumnType("integer");

                    b.Property<string>("firstname")
                        .HasColumnType("text");

                    b.Property<bool>("is_email_verified")
                        .HasColumnType("boolean");

                    b.Property<string>("lastname")
                        .HasColumnType("text");

                    b.Property<bool>("manager_pm_notification_status")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("notification_token")
                        .HasColumnType("text");

                    b.Property<bool>("operator_usage_report_email_not_status")
                        .HasColumnType("boolean");

                    b.Property<string>("os")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<int?>("prefer_language_id")
                        .HasColumnType("integer");

                    b.Property<Guid?>("role_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.HasKey("uuid");

                    b.HasIndex("ac_active_client_company");

                    b.HasIndex("ac_active_company");

                    b.HasIndex("ac_active_role_app");

                    b.HasIndex("ac_active_role_web");

                    b.HasIndex("ac_active_site");

                    b.HasIndex("ac_default_client_company");

                    b.HasIndex("ac_default_company");

                    b.HasIndex("ac_default_role_app");

                    b.HasIndex("ac_default_role_web");

                    b.HasIndex("ac_default_site");

                    b.HasIndex("executive_report_status");

                    b.HasIndex("prefer_language_id");

                    b.HasIndex("role_id");

                    b.HasIndex("status");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Jarvis.db.Models.UserEmailNotificationConfigurationSettings", b =>
                {
                    b.Property<long>("email_config_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("disable_till")
                        .HasColumnType("integer");

                    b.Property<int?>("disable_till_by")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("disabled_till_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("executive_pm_due_not_resolved_email_notification")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("setup_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("email_config_id");

                    b.HasIndex("disable_till_by");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("UserEmailNotificationConfigurationSettings");
                });

            modelBuilder.Entity("Jarvis.db.Models.UserRoles", b =>
                {
                    b.Property<Guid>("userrole_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("role_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("userrole_id");

                    b.HasIndex("role_id");

                    b.HasIndex("status");

                    b.HasIndex("user_id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Jarvis.db.Models.UserSites", b =>
                {
                    b.Property<Guid>("usersite_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("company_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("status")
                        .HasColumnType("integer");

                    b.Property<Guid>("user_id")
                        .HasColumnType("uuid");

                    b.HasKey("usersite_id");

                    b.HasIndex("site_id");

                    b.HasIndex("status");

                    b.HasIndex("user_id");

                    b.ToTable("UserSites");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOInspectionsTemplateFormIOAssignment", b =>
                {
                    b.Property<Guid>("wo_inspectionsTemplateFormIOAssignment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("created_by")
                        .HasColumnType("uuid");

                    b.Property<Guid>("form_id")
                        .HasColumnType("uuid");

                    b.Property<string>("group_string")
                        .HasColumnType("text");

                    b.Property<Guid?>("inspectiontemplate_asset_class_id")
                        .HasColumnType("uuid");

                    b.Property<bool>("is_archived")
                        .HasColumnType("boolean");

                    b.Property<int>("status_id")
                        .HasColumnType("integer");

                    b.Property<Guid?>("task_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("technician_user_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<Guid>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("wo_inspectionsTemplateFormIOAssignment_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("form_id");

                    b.HasIndex("inspectiontemplate_asset_class_id");

                    b.HasIndex("status_id");

                    b.HasIndex("task_id");

                    b.HasIndex("technician_user_id");

                    b.HasIndex("wo_id");

                    b.ToTable("WOInspectionsTemplateFormIOAssignment");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOLineBuildingMapping", b =>
                {
                    b.Property<int>("wolinebuildings_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("formiobuilding_id")
                        .HasColumnType("integer");

                    b.Property<int?>("formiofloor_id")
                        .HasColumnType("integer");

                    b.Property<int?>("formioroom_id")
                        .HasColumnType("integer");

                    b.Property<int?>("formiosection_id")
                        .HasColumnType("integer");

                    b.Property<Guid?>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("wolinebuildings_id");

                    b.HasIndex("formiobuilding_id");

                    b.HasIndex("formiofloor_id");

                    b.HasIndex("formioroom_id");

                    b.HasIndex("formiosection_id");

                    b.HasIndex("woonboardingassets_id")
                        .IsUnique();

                    b.ToTable("WOLineBuildingMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOLineIssue", b =>
                {
                    b.Property<Guid>("wo_line_issue_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_form_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<string>("atmw_first_comment")
                        .HasColumnType("text");

                    b.Property<string>("back_office_note")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("field_note")
                        .HasColumnType("text");

                    b.Property<string>("form_retrived_asset_name")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_issue_linked_for_fix")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_main_issue_created")
                        .HasColumnType("boolean");

                    b.Property<int?>("issue_caused_id")
                        .HasColumnType("integer");

                    b.Property<string>("issue_description")
                        .HasColumnType("text");

                    b.Property<int?>("issue_status")
                        .HasColumnType("integer");

                    b.Property<string>("issue_title")
                        .HasColumnType("text");

                    b.Property<int>("issue_type")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid?>("original_asset_form_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("original_wo_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("original_woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.Property<string>("pm_issue_identity_key")
                        .HasColumnType("text");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("wo_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("wo_line_issue_id");

                    b.HasIndex("asset_form_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("issue_status");

                    b.HasIndex("site_id");

                    b.HasIndex("wo_id");

                    b.HasIndex("woonboardingassets_id");

                    b.ToTable("WOLineIssue");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOOBAssetFedByMapping", b =>
                {
                    b.Property<Guid>("wo_ob_asset_fed_by_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<int?>("fed_by_usage_type_id")
                        .HasColumnType("integer");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_parent_from_ob_wo")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_via_subcomponant_asset_from_ob_wo")
                        .HasColumnType("boolean");

                    b.Property<string>("length")
                        .HasColumnType("text");

                    b.Property<Guid>("parent_asset_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<string>("style")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<Guid?>("via_subcomponant_asset_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("wo_ob_asset_fed_by_id");

                    b.HasIndex("site_id");

                    b.HasIndex("woonboardingassets_id");

                    b.ToTable("WOOBAssetFedByMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOOBAssetTempFormIOBuildingMapping", b =>
                {
                    b.Property<Guid>("wo_ob_asset_temp_formiobuilding_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("temp_formiobuilding_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("temp_formiofloor_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("temp_formioroom_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("temp_formiosection_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("wo_ob_asset_temp_formiobuilding_id");

                    b.HasIndex("temp_formiobuilding_id");

                    b.HasIndex("temp_formiofloor_id");

                    b.HasIndex("temp_formioroom_id");

                    b.HasIndex("temp_formiosection_id");

                    b.HasIndex("woonboardingassets_id")
                        .IsUnique();

                    b.ToTable("WOOBAssetTempFormIOBuildingMappings");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOOnboardingAssets", b =>
                {
                    b.Property<Guid>("woonboardingassets_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("QR_code")
                        .HasColumnType("text");

                    b.Property<string>("asset_class_code")
                        .HasColumnType("text");

                    b.Property<string>("asset_class_name")
                        .HasColumnType("text");

                    b.Property<Guid?>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<string>("asset_name")
                        .HasColumnType("text");

                    b.Property<int?>("asset_operating_condition_state")
                        .HasColumnType("integer");

                    b.Property<string>("back_office_note")
                        .HasColumnType("text");

                    b.Property<string>("building")
                        .HasColumnType("text");

                    b.Property<int?>("code_compliance")
                        .HasColumnType("integer");

                    b.Property<string>("comments")
                        .HasColumnType("text");

                    b.Property<DateTime?>("commisiion_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("completed_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("component_level_type_id")
                        .HasColumnType("integer");

                    b.Property<int?>("condition_index_type")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<int?>("criticality_index_type")
                        .HasColumnType("integer");

                    b.Property<string>("dynmic_fields_json")
                        .HasColumnType("text");

                    b.Property<Guid?>("fed_by")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("fed_by_ob_asset_id")
                        .HasColumnType("uuid");

                    b.Property<string>("field_note")
                        .HasColumnType("text");

                    b.Property<bool>("flag_issue_nec_violation")
                        .HasColumnType("boolean");

                    b.Property<bool>("flag_issue_osha_violation")
                        .HasColumnType("boolean");

                    b.Property<bool>("flag_issue_thermal_anamoly_detected")
                        .HasColumnType("boolean");

                    b.Property<string>("floor")
                        .HasColumnType("text");

                    b.Property<string>("form_nameplate_info")
                        .HasColumnType("text");

                    b.Property<int?>("general_issue_resolution")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("inspected_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("inspection_further_details")
                        .HasColumnType("text");

                    b.Property<int?>("inspection_type")
                        .HasColumnType("integer");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_fed_by_ob_asset")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_main_asset_created")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_wo_line_for_exisiting_asset")
                        .HasColumnType("boolean");

                    b.Property<int?>("location")
                        .HasColumnType("integer");

                    b.Property<string>("manufacturer")
                        .HasColumnType("text");

                    b.Property<string>("model")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<DateTime?>("mwo_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("mwo_inspection_type_status")
                        .HasColumnType("integer");

                    b.Property<int?>("nec_violation")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ob_existing_asset_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("osha_violation")
                        .HasColumnType("integer");

                    b.Property<string>("other_notes")
                        .HasColumnType("text");

                    b.Property<string>("pdf_report_url")
                        .HasColumnType("text");

                    b.Property<string>("problem_description")
                        .HasColumnType("text");

                    b.Property<string>("rated_amps")
                        .HasColumnType("text");

                    b.Property<int?>("recommended_action")
                        .HasColumnType("integer");

                    b.Property<int?>("recommended_action_schedule")
                        .HasColumnType("integer");

                    b.Property<int?>("repair_resolution")
                        .HasColumnType("integer");

                    b.Property<Guid?>("replaced_asset_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("replacement_resolution")
                        .HasColumnType("integer");

                    b.Property<string>("room")
                        .HasColumnType("text");

                    b.Property<string>("section")
                        .HasColumnType("text");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<string>("solution_description")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<string>("task_rejected_notes")
                        .HasColumnType("text");

                    b.Property<Guid?>("technician_user_id")
                        .HasColumnType("uuid");

                    b.Property<string>("thermal_anomaly_additional_ir_photo")
                        .HasColumnType("text");

                    b.Property<string>("thermal_anomaly_location")
                        .HasColumnType("text");

                    b.Property<string>("thermal_anomaly_measured_amps")
                        .HasColumnType("text");

                    b.Property<string>("thermal_anomaly_measured_temps")
                        .HasColumnType("text");

                    b.Property<int?>("thermal_anomaly_probable_cause")
                        .HasColumnType("integer");

                    b.Property<int?>("thermal_anomaly_recommendation")
                        .HasColumnType("integer");

                    b.Property<string>("thermal_anomaly_refrence_temps")
                        .HasColumnType("text");

                    b.Property<string>("thermal_anomaly_sub_componant")
                        .HasColumnType("text");

                    b.Property<int?>("thermal_classification_id")
                        .HasColumnType("integer");

                    b.Property<string>("voltage")
                        .HasColumnType("text");

                    b.Property<Guid>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("woonboardingassets_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("site_id");

                    b.HasIndex("status");

                    b.HasIndex("wo_id");

                    b.ToTable("WOOnboardingAssets");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOOnboardingAssetsImagesMapping", b =>
                {
                    b.Property<Guid>("woonboardingassetsimagesmapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("asset_photo")
                        .HasColumnType("text");

                    b.Property<int>("asset_photo_type")
                        .HasColumnType("integer");

                    b.Property<string>("asset_thumbnail_photo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<int?>("image_duration_type_id")
                        .HasColumnType("integer");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("woonboardingassetsimagesmapping_id");

                    b.HasIndex("woonboardingassets_id");

                    b.ToTable("WOOnboardingAssetsImagesMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOcategorytoTaskMapping", b =>
                {
                    b.Property<Guid>("WOcategorytoTaskMapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("assigned_asset")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("created_by")
                        .HasColumnType("uuid");

                    b.Property<int?>("inspection_type")
                        .HasColumnType("integer");

                    b.Property<bool>("is_archived")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_newly_asset_created")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_parent_task")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("newly_created_asset_id")
                        .HasColumnType("uuid");

                    b.Property<int>("serial_number")
                        .HasColumnType("integer");

                    b.Property<Guid?>("task_id")
                        .HasColumnType("uuid");

                    b.Property<string>("task_rejected_notes")
                        .HasColumnType("text");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("updated_by")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("wo_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("wo_inspectionsTemplateFormIOAssignment_id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("WOcategorytoTaskMapping_id");

                    b.HasIndex("assigned_asset");

                    b.HasIndex("newly_created_asset_id")
                        .IsUnique();

                    b.HasIndex("task_id");

                    b.HasIndex("wo_id");

                    b.HasIndex("wo_inspectionsTemplateFormIOAssignment_id");

                    b.ToTable("WOcategorytoTaskMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOlineAssetPMImagesMapping", b =>
                {
                    b.Property<Guid>("woline_assetpm_images_mapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("active_asset_pm_woline_mapping_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("image_name")
                        .HasColumnType("text");

                    b.Property<int>("image_type")
                        .HasColumnType("integer");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("pm_image_caption")
                        .HasColumnType("text");

                    b.HasKey("woline_assetpm_images_mapping_id");

                    b.HasIndex("active_asset_pm_woline_mapping_id");

                    b.ToTable("WOlineAssetPMImagesMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOlineIssueImagesMapping", b =>
                {
                    b.Property<Guid>("woline_issue_image_mapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<int?>("image_duration_type_id")
                        .HasColumnType("integer");

                    b.Property<string>("image_file_name")
                        .HasColumnType("text");

                    b.Property<string>("image_thumbnail_file_name")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("wo_line_issue_id")
                        .HasColumnType("uuid");

                    b.HasKey("woline_issue_image_mapping_id");

                    b.HasIndex("site_id");

                    b.HasIndex("wo_line_issue_id");

                    b.ToTable("WOlineIssueImagesMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOlineSubLevelcomponentMapping", b =>
                {
                    b.Property<Guid>("woline_sublevelcomponent_mapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("circuit")
                        .HasColumnType("text");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("image_name")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_sublevelcomponent_from_ob_wo")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("sublevelcomponent_asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<Guid>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("woline_sublevelcomponent_mapping_id");

                    b.HasIndex("site_id");

                    b.HasIndex("woonboardingassets_id");

                    b.ToTable("WOlineSubLevelcomponentMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOlineTopLevelcomponentMapping", b =>
                {
                    b.Property<Guid>("woline_toplevelcomponent_mapping_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_toplevelcomponent_from_ob_wo")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("site_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("toplevelcomponent_asset_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("updated_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("updated_by")
                        .HasColumnType("text");

                    b.Property<Guid>("woonboardingassets_id")
                        .HasColumnType("uuid");

                    b.HasKey("woline_toplevelcomponent_mapping_id");

                    b.HasIndex("site_id");

                    b.HasIndex("woonboardingassets_id");

                    b.ToTable("WOlineTopLevelcomponentMapping");
                });

            modelBuilder.Entity("Jarvis.db.Models.WorkOrderAttachments", b =>
                {
                    b.Property<Guid>("wo_attachment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("filename")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("user_uploaded_name")
                        .HasColumnType("text");

                    b.Property<Guid>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("wo_attachment_id");

                    b.HasIndex("wo_id");

                    b.ToTable("WorkOrderAttachments");
                });

            modelBuilder.Entity("Jarvis.db.Models.WorkOrderCancel", b =>
                {
                    b.Property<Guid>("wo_cancel_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<string>("notes")
                        .HasColumnType("text");

                    b.Property<int>("reason_id")
                        .HasColumnType("integer");

                    b.Property<Guid>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("wo_cancel_id");

                    b.HasIndex("reason_id");

                    b.HasIndex("wo_id");

                    b.ToTable("WorkOrderCancel");
                });

            modelBuilder.Entity("Jarvis.db.Models.WorkOrderIssues", b =>
                {
                    b.Property<Guid>("wo_issue_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<Guid>("issue_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("wo_issue_id");

                    b.HasIndex("issue_id");

                    b.HasIndex("wo_id");

                    b.ToTable("WorkOrderIssues");
                });

            modelBuilder.Entity("Jarvis.db.Models.WorkOrderTasks", b =>
                {
                    b.Property<Guid>("wo_task_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<Guid>("task_id")
                        .HasColumnType("uuid");

                    b.Property<string>("time_remaining_display")
                        .HasColumnType("text");

                    b.Property<int?>("time_spent_hours")
                        .HasColumnType("integer");

                    b.Property<int?>("time_spent_minutes")
                        .HasColumnType("integer");

                    b.Property<Guid>("wo_id")
                        .HasColumnType("uuid");

                    b.HasKey("wo_task_id");

                    b.HasIndex("status");

                    b.HasIndex("task_id");

                    b.HasIndex("wo_id");

                    b.ToTable("WorkOrderTasks");
                });

            modelBuilder.Entity("Jarvis.db.Models.WorkOrders", b =>
                {
                    b.Property<Guid>("wo_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("asset_id")
                        .HasColumnType("uuid");

                    b.Property<string>("bulk_data_import_failed_logs")
                        .HasColumnType("text");

                    b.Property<int?>("bulk_data_import_status")
                        .HasColumnType("integer");

                    b.Property<Guid?>("client_company_id")
                        .HasColumnType("uuid");

                    b.Property<int?>("complete_wo_thread_status")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("completed_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("created_by")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<DateTime>("due_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ir_wo_export_pdf_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ir_wo_pdf_report")
                        .HasColumnType("text");

                    b.Property<int?>("ir_wo_pdf_report_status")
                        .HasColumnType("integer");

                    b.Property<bool>("is_archive")
                        .HasColumnType("boolean");

                    b.Property<string>("manual_wo_number")
                        .HasColumnType("text");

                    b.Property<DateTime?>("modified_at")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("modified_by")
                        .HasColumnType("text");

                    b.Property<int?>("priority")
                        .HasColumnType("integer");

                    b.Property<Guid?>("service_dealer_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("site_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<Guid?>("technician_user_id")
                        .HasColumnType("uuid");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.Property<long>("wo_number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("wo_type")
                        .HasColumnType("integer");

                    b.HasKey("wo_id");

                    b.HasIndex("asset_id");

                    b.HasIndex("client_company_id");

                    b.HasIndex("priority");

                    b.HasIndex("service_dealer_id");

                    b.HasIndex("site_id");

                    b.HasIndex("status");

                    b.HasIndex("technician_user_id");

                    b.HasIndex("wo_type");

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("Jarvis.db.Models.ActiveAssetPMWOlineMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.AssetPMs", "AssetPMs")
                        .WithMany("ActiveAssetPMWOlineMapping")
                        .HasForeignKey("asset_pm_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.WOOnboardingAssets", "WOOnboardingAssets")
                        .WithOne("ActiveAssetPMWOlineMapping")
                        .HasForeignKey("Jarvis.db.Models.ActiveAssetPMWOlineMapping", "woonboardingassets_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.Asset", b =>
                {
                    b.HasOne("Jarvis.db.Models.Assethierarchy", "Assethierarchy")
                        .WithMany()
                        .HasForeignKey("asset_hierarchy_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "ConditionMaster")
                        .WithMany("FormIOAssetCondition")
                        .HasForeignKey("condition_state");

                    b.HasOne("Jarvis.db.Models.InspectionsTemplateFormIO", "InspectionsTemplateFormIO")
                        .WithMany("Asset")
                        .HasForeignKey("form_id");

                    b.HasOne("Jarvis.db.Models.FormIOType", "FormIOType")
                        .WithMany()
                        .HasForeignKey("form_type_id");

                    b.HasOne("Jarvis.db.Models.InspectionForms", "InspectionForms")
                        .WithMany("Asset")
                        .HasForeignKey("inspectionform_id");

                    b.HasOne("Jarvis.db.Models.InspectionTemplateAssetClass", "InspectionTemplateAssetClass")
                        .WithMany("Asset")
                        .HasForeignKey("inspectiontemplate_asset_class_id");

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany("Asset")
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany("Asset")
                        .HasForeignKey("status");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetActivityLogs", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetAttachmentMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetAttachmentMapping")
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Sites", "Site")
                        .WithMany()
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetChildrenHierarchyMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetChildrenHierarchyMapping")
                        .HasForeignKey("asset_id");

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetClassFormIOMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.InspectionsTemplateFormIO", "InspectionsTemplateFormIO")
                        .WithMany("AssetClassFormIOMapping")
                        .HasForeignKey("form_id");

                    b.HasOne("Jarvis.db.Models.InspectionTemplateAssetClass", "InspectionTemplateAssetClass")
                        .WithMany("AssetClassFormIOMapping")
                        .HasForeignKey("inspectiontemplate_asset_class_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "WOTypeStatusMaster")
                        .WithMany()
                        .HasForeignKey("wo_type");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetFormIO", b =>
                {
                    b.HasOne("Jarvis.db.Models.WOcategorytoTaskMapping", "WOcategorytoTaskMapping")
                        .WithOne("AssetFormIO")
                        .HasForeignKey("Jarvis.db.Models.AssetFormIO", "WOcategorytoTaskMapping_id");

                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetFormIO")
                        .HasForeignKey("asset_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "PDFReportStatusMaster")
                        .WithMany("InspectionsTemplateFormIOPDF")
                        .HasForeignKey("pdf_report_status");

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany("AssetFormIO")
                        .HasForeignKey("site_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany("InspectionsTemplateFormIO")
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("AssetFormIO")
                        .HasForeignKey("wo_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetFormIOBuildingMappings", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithOne("AssetFormIOBuildingMappings")
                        .HasForeignKey("Jarvis.db.Models.AssetFormIOBuildingMappings", "asset_id");

                    b.HasOne("Jarvis.db.Models.FormIOBuildings", "FormIOBuildings")
                        .WithMany()
                        .HasForeignKey("formiobuilding_id");

                    b.HasOne("Jarvis.db.Models.FormIOFloors", "FormIOFloors")
                        .WithMany()
                        .HasForeignKey("formiofloor_id");

                    b.HasOne("Jarvis.db.Models.FormIORooms", "FormIORooms")
                        .WithMany()
                        .HasForeignKey("formioroom_id");

                    b.HasOne("Jarvis.db.Models.FormIOSections", "FormIOSections")
                        .WithMany("AssetFormIOBuildingMappings")
                        .HasForeignKey("formiosection_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetIRWOImagesLabelMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetIRWOImagesLabelMapping")
                        .HasForeignKey("asset_id");

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetInspectionReport", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetIssue", b =>
                {
                    b.HasOne("Jarvis.db.Models.AssetFormIO", "AssetFormIO")
                        .WithMany("AssetIssue")
                        .HasForeignKey("asset_form_id");

                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetIssue")
                        .HasForeignKey("asset_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("issue_status");

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id");

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("AssetIssue")
                        .HasForeignKey("wo_id");

                    b.HasOne("Jarvis.db.Models.WOLineIssue", "WOLineIssue")
                        .WithOne("AssetIssue")
                        .HasForeignKey("Jarvis.db.Models.AssetIssue", "wo_line_issue_id");

                    b.HasOne("Jarvis.db.Models.WOOnboardingAssets", "WOOnboardingAssets")
                        .WithMany("AssetIssue")
                        .HasForeignKey("woonboardingassets_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetIssueComments", b =>
                {
                    b.HasOne("Jarvis.db.Models.AssetIssue", "AssetIssue")
                        .WithMany("AssetIssueComments")
                        .HasForeignKey("asset_issue_id");

                    b.HasOne("Jarvis.db.Models.User", "User")
                        .WithMany("AssetIssueComments")
                        .HasForeignKey("comment_user_id");

                    b.HasOne("Jarvis.db.Models.Role", "Roles")
                        .WithMany()
                        .HasForeignKey("comment_user_role_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetIssueImagesMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.AssetIssue", "AssetIssue")
                        .WithMany("AssetIssueImagesMapping")
                        .HasForeignKey("asset_issue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetMeterHourHistory", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetNotes", b =>
                {
                    b.HasOne("Jarvis.db.Models.AssetFormIO", "AssetFormIO")
                        .WithMany()
                        .HasForeignKey("asset_form_id");

                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetNotes")
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.WOOnboardingAssets", "WOOnboardingAssets")
                        .WithMany()
                        .HasForeignKey("woonboardingassets_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetPMAttachments", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.AssetPMs", "AssetPMs")
                        .WithMany("AssetPMAttachments")
                        .HasForeignKey("asset_pm_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.AssetPMPlans", "AssetPMPlans")
                        .WithMany()
                        .HasForeignKey("asset_pm_plan_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetPMNotificationConfigurations", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithOne("AssetPMNotificationConfigurations")
                        .HasForeignKey("Jarvis.db.Models.AssetPMNotificationConfigurations", "asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "DueAtMeterHoursStatus")
                        .WithMany()
                        .HasForeignKey("due_at_reminder_meter_hours_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "DueAtStatus")
                        .WithMany()
                        .HasForeignKey("due_at_reminder_status")
                        .HasConstraintName("FK_AssetPMNotificationConfigurations_StatusMasters_due_at_rem~1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "FirstMeterHoursReminderStatus")
                        .WithMany()
                        .HasForeignKey("first_reminder_before_on_meter_hours_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "FirstReminderStatus")
                        .WithMany()
                        .HasForeignKey("first_reminder_before_on_status")
                        .HasConstraintName("FK_AssetPMNotificationConfigurations_StatusMasters_first_remi~1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "FirstReminderType")
                        .WithMany()
                        .HasForeignKey("first_reminder_before_on_type")
                        .HasConstraintName("FK_AssetPMNotificationConfigurations_StatusMasters_first_remi~2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "SecondMeterHoursReminderStatus")
                        .WithMany()
                        .HasForeignKey("second_reminder_before_on_meter_hours_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "SecondReminderStatus")
                        .WithMany()
                        .HasForeignKey("second_reminder_before_on_status")
                        .HasConstraintName("FK_AssetPMNotificationConfigurations_StatusMasters_second_rem~1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "SecondReminderType")
                        .WithMany()
                        .HasForeignKey("second_reminder_before_on_type")
                        .HasConstraintName("FK_AssetPMNotificationConfigurations_StatusMasters_second_rem~2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetPMPlans", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetPMTasks", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.AssetPMs", "AssetPMs")
                        .WithMany("AssetPMTasks")
                        .HasForeignKey("asset_pm_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.AssetPMPlans", "AssetPMPlans")
                        .WithMany()
                        .HasForeignKey("asset_pm_plan_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Tasks", "Tasks")
                        .WithMany()
                        .HasForeignKey("task_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetPMs", b =>
                {
                    b.HasOne("Jarvis.db.Models.AssetFormIO", "AssetFormIO")
                        .WithMany("AssetPMs")
                        .HasForeignKey("asset_form_id");

                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetPMs")
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.AssetPMPlans", "AssetPMPlans")
                        .WithMany("AssetPMs")
                        .HasForeignKey("asset_pm_plan_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "PMDateTimeRepeatTypeStatus")
                        .WithMany()
                        .HasForeignKey("datetime_repeat_time_period_type");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "PMByStatus")
                        .WithMany()
                        .HasForeignKey("pm_trigger_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "PMTypeStatus")
                        .WithMany()
                        .HasForeignKey("pm_trigger_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.ServiceDealers", "ServiceDealers")
                        .WithMany()
                        .HasForeignKey("service_dealer_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("AssetPMs")
                        .HasForeignKey("wo_id");

                    b.HasOne("Jarvis.db.Models.WOOnboardingAssets", "WOOnboardingAssets")
                        .WithOne("AssetPMs")
                        .HasForeignKey("Jarvis.db.Models.AssetPMs", "woonboardingassets_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetPMsTriggerConditionMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.AssetPMs", "AssetPMs")
                        .WithMany("AssetPMsTriggerConditionMapping")
                        .HasForeignKey("asset_pm_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "PMDateTimeRepeatTypeStatus")
                        .WithMany()
                        .HasForeignKey("datetime_repeat_time_period_type");

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetParentHierarchyMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetParentHierarchyMapping")
                        .HasForeignKey("asset_id");

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetProfileImages", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetProfileImages")
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetReplacementMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetReplacementMapping")
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetSubLevelcomponentMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetSubLevelcomponentMapping")
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetTasks", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Tasks", "Tasks")
                        .WithMany("AssetTasks")
                        .HasForeignKey("task_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetTopLevelcomponentMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetTopLevelcomponentMapping")
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.AssetTransactionHistory", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("AssetTransactionHistory")
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.ClientCompany", b =>
                {
                    b.HasOne("Jarvis.db.Models.Company", "parent_company")
                        .WithMany("ClientCompany")
                        .HasForeignKey("parent_company_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status");
                });

            modelBuilder.Entity("Jarvis.db.Models.ClusterDiagramPDFSiteMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithOne("ClusterDiagramPDFSiteMapping")
                        .HasForeignKey("Jarvis.db.Models.ClusterDiagramPDFSiteMapping", "site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.Company", b =>
                {
                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany("Company")
                        .HasForeignKey("status");
                });

            modelBuilder.Entity("Jarvis.db.Models.CompanyPMNotificationConfigurations", b =>
                {
                    b.HasOne("Jarvis.db.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "DueAtMeterHoursStatus")
                        .WithMany()
                        .HasForeignKey("due_at_reminder_meter_hours_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "DueAtStatus")
                        .WithMany()
                        .HasForeignKey("due_at_reminder_status")
                        .HasConstraintName("FK_CompanyPMNotificationConfigurations_StatusMasters_due_at_r~1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "FirstMeterHoursReminderStatus")
                        .WithMany()
                        .HasForeignKey("first_reminder_before_on_meter_hours_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "FirstReminderStatus")
                        .WithMany()
                        .HasForeignKey("first_reminder_before_on_status")
                        .HasConstraintName("FK_CompanyPMNotificationConfigurations_StatusMasters_first_re~1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "FirstReminderType")
                        .WithMany()
                        .HasForeignKey("first_reminder_before_on_type")
                        .HasConstraintName("FK_CompanyPMNotificationConfigurations_StatusMasters_first_re~2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "SecondMeterHoursReminderStatus")
                        .WithMany()
                        .HasForeignKey("second_reminder_before_on_meter_hours_status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "SecondReminderStatus")
                        .WithMany()
                        .HasForeignKey("second_reminder_before_on_status")
                        .HasConstraintName("FK_CompanyPMNotificationConfigurations_StatusMasters_second_r~1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "SecondReminderType")
                        .WithMany()
                        .HasForeignKey("second_reminder_before_on_type")
                        .HasConstraintName("FK_CompanyPMNotificationConfigurations_StatusMasters_second_r~2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.CompletedPMTriggers", b =>
                {
                    b.HasOne("Jarvis.db.Models.AssetPMs", "AssetPMs")
                        .WithMany()
                        .HasForeignKey("asset_pm_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.PMTriggers", "PMTriggers")
                        .WithMany()
                        .HasForeignKey("pm_trigger_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.Equipment", b =>
                {
                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIOFloors", b =>
                {
                    b.HasOne("Jarvis.db.Models.FormIOBuildings", "FormIOBuildings")
                        .WithMany("FormIOFloors")
                        .HasForeignKey("formiobuilding_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIOInsulationResistanceTestMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.AssetFormIO", "AssetFormIO")
                        .WithOne("FormIOInsulationResistanceTestMapping")
                        .HasForeignKey("Jarvis.db.Models.FormIOInsulationResistanceTestMapping", "asset_form_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIOLocationNotes", b =>
                {
                    b.HasOne("Jarvis.db.Models.FormIOBuildings", "FormIOBuildings")
                        .WithMany()
                        .HasForeignKey("formiobuilding_id");

                    b.HasOne("Jarvis.db.Models.FormIOFloors", "FormIOFloors")
                        .WithMany()
                        .HasForeignKey("formiofloor_id");

                    b.HasOne("Jarvis.db.Models.FormIORooms", "FormIORooms")
                        .WithMany()
                        .HasForeignKey("formioroom_id");

                    b.HasOne("Jarvis.db.Models.FormIOSections", "FormIOSections")
                        .WithOne("FormIOLocationNotes")
                        .HasForeignKey("Jarvis.db.Models.FormIOLocationNotes", "formiosection_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIORooms", b =>
                {
                    b.HasOne("Jarvis.db.Models.FormIOFloors", "FormIOFloors")
                        .WithMany("FormIORooms")
                        .HasForeignKey("formiofloor_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.FormIOSections", b =>
                {
                    b.HasOne("Jarvis.db.Models.FormIORooms", "FormIORooms")
                        .WithMany("FormIOSections")
                        .HasForeignKey("formioroom_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.IRScanWOImageFileMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("IRScanWOImageFileMapping")
                        .HasForeignKey("wo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.IRWOImagesLabelMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id");

                    b.HasOne("Jarvis.db.Models.WOOnboardingAssets", "WOOnboardingAssets")
                        .WithMany("IRWOImagesLabelMapping")
                        .HasForeignKey("woonboardingassets_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.Inspection", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("Inspection")
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.User", "User")
                        .WithMany("Inspection")
                        .HasForeignKey("operator_id");

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany("Inspection")
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany("Inspection")
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.InspectionFormAttributes", b =>
                {
                    b.HasOne("Jarvis.db.Models.InspectionAttributeCategory", "InspectionAttributeCategory")
                        .WithMany("InspectionFormAttributes")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.InspectionFormTypes", b =>
                {
                    b.HasOne("Jarvis.db.Models.Company", "Company")
                        .WithMany("InspectionFormTypes")
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.InspectionForms", b =>
                {
                    b.HasOne("Jarvis.db.Models.Company", "Company")
                        .WithMany("InspectionForms")
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.FormIOType", "FormIOType")
                        .WithMany("InspectionForms")
                        .HasForeignKey("form_type_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany("InspectionForms")
                        .HasForeignKey("status");
                });

            modelBuilder.Entity("Jarvis.db.Models.InspectionTemplateAssetClass", b =>
                {
                    b.HasOne("Jarvis.db.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.FormIOType", "FormIOType")
                        .WithMany("InspectionTemplateAssetClass")
                        .HasForeignKey("form_type_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.InspectionsTemplateFormIO", b =>
                {
                    b.HasOne("Jarvis.db.Models.FormIOType", "FormIOType")
                        .WithMany()
                        .HasForeignKey("form_type_id");

                    b.HasOne("Jarvis.db.Models.InspectionTemplateAssetClass", "InspectionTemplateAssetClass")
                        .WithMany("InspectionsTemplateFormIO")
                        .HasForeignKey("inspectiontemplate_asset_class_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status");
                });

            modelBuilder.Entity("Jarvis.db.Models.Issue", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("Issues")
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.InspectionFormAttributes", "Attributes")
                        .WithMany("Issue")
                        .HasForeignKey("attribute_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Inspection", "Inspection")
                        .WithMany("Issues")
                        .HasForeignKey("inspection_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.MaintenanceRequests", "MaintenanceRequests")
                        .WithMany("Issue")
                        .HasForeignKey("mr_id");

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany("Issue")
                        .HasForeignKey("site_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany("Issue")
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.IssueRecord", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("IssueRecords")
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.InspectionFormAttributes", "Attributes")
                        .WithMany("IssueRecord")
                        .HasForeignKey("attrubute_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Inspection", "Inspection")
                        .WithMany("IssueRecords")
                        .HasForeignKey("inspection_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Issue", "Issue")
                        .WithOne("IssueRecord")
                        .HasForeignKey("Jarvis.db.Models.IssueRecord", "issue_uuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany("IssueRecord")
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.IssueStatus", b =>
                {
                    b.HasOne("Jarvis.db.Models.Issue", "Issue")
                        .WithMany("IssueStatus")
                        .HasForeignKey("issue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.LanguageMaster", b =>
                {
                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("is_active")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.MaintenanceReqCancelRequests", b =>
                {
                    b.HasOne("Jarvis.db.Models.MaintenanceRequests", "MaintenanceRequests")
                        .WithMany()
                        .HasForeignKey("mr_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.CancelReasonMaster", "CancelReasonMaster")
                        .WithMany()
                        .HasForeignKey("reason_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.MaintenanceRequests", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "MRTypeStatusMaster")
                        .WithMany()
                        .HasForeignKey("mr_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "PriorityStatusMaster")
                        .WithMany()
                        .HasForeignKey("priority")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("MaintenanceRequests")
                        .HasForeignKey("wo_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMAttachments", b =>
                {
                    b.HasOne("Jarvis.db.Models.PMs", "PMs")
                        .WithMany("PMAttachments")
                        .HasForeignKey("pm_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.PMPlans", "PMPlans")
                        .WithMany()
                        .HasForeignKey("pm_plan_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.PMCategory", b =>
                {
                    b.HasOne("Jarvis.db.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("company_id");

                    b.HasOne("Jarvis.db.Models.InspectionTemplateAssetClass", "InspectionTemplateAssetClass")
                        .WithOne("PMCategory")
                        .HasForeignKey("Jarvis.db.Models.PMCategory", "inspectiontemplate_asset_class_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMItemMasterForms", b =>
                {
                    b.HasOne("Jarvis.db.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("company_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMPlans", b =>
                {
                    b.HasOne("Jarvis.db.Models.PMCategory", "PMCategory")
                        .WithMany("PMPlans")
                        .HasForeignKey("pm_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status");
                });

            modelBuilder.Entity("Jarvis.db.Models.PMTasks", b =>
                {
                    b.HasOne("Jarvis.db.Models.PMs", "PMs")
                        .WithMany("PMTasks")
                        .HasForeignKey("pm_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.PMPlans", "PMPlans")
                        .WithMany()
                        .HasForeignKey("pm_plan_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Tasks", "Tasks")
                        .WithMany("PMTasks")
                        .HasForeignKey("task_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.PMTriggers", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.AssetPMs", "AssetPMs")
                        .WithMany("PMTriggers")
                        .HasForeignKey("asset_pm_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "AssetPMStatusMaster")
                        .WithMany()
                        .HasForeignKey("asset_pm_status");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.PMTriggersRemarks", b =>
                {
                    b.HasOne("Jarvis.db.Models.PMTriggers", "PMTriggers")
                        .WithOne("PMTriggersRemarks")
                        .HasForeignKey("Jarvis.db.Models.PMTriggersRemarks", "pm_trigger_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.PMTriggersTasks", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("asset_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.AssetPMs", "AssetPMs")
                        .WithMany()
                        .HasForeignKey("asset_pm_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.AssetPMTasks", "AssetPMTasks")
                        .WithMany()
                        .HasForeignKey("asset_pm_task_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.PMTriggers", "PMTriggers")
                        .WithMany("PMTriggersTasks")
                        .HasForeignKey("pm_trigger_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Tasks", "Tasks")
                        .WithMany()
                        .HasForeignKey("task_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.PMs", b =>
                {
                    b.HasOne("Jarvis.db.Models.StatusMaster", "PMDateTimeRepeatTypeStatus")
                        .WithMany()
                        .HasForeignKey("datetime_repeat_time_period_type");

                    b.HasOne("Jarvis.db.Models.PMPlans", "PMPlans")
                        .WithMany("PMs")
                        .HasForeignKey("pm_plan_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "PMByStatus")
                        .WithMany()
                        .HasForeignKey("pm_trigger_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "PMTypeStatus")
                        .WithMany()
                        .HasForeignKey("pm_trigger_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.ServiceDealers", "ServiceDealers")
                        .WithMany()
                        .HasForeignKey("service_dealer_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.PMsTriggerConditionMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.StatusMaster", "PMDateTimeRepeatTypeStatus")
                        .WithMany()
                        .HasForeignKey("datetime_repeat_time_period_type");

                    b.HasOne("Jarvis.db.Models.PMs", "PMs")
                        .WithMany("PMsTriggerConditionMapping")
                        .HasForeignKey("pm_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.RecordSyncInformation", b =>
                {
                    b.HasOne("Jarvis.db.Models.DeviceInfo", "DeviceInfo")
                        .WithMany("RecordSyncInformation")
                        .HasForeignKey("device_info_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.ResetPasswordToken", b =>
                {
                    b.HasOne("Jarvis.db.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.ServiceDealers", b =>
                {
                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.Sites", b =>
                {
                    b.HasOne("Jarvis.db.Models.ClientCompany", "ClientCompany")
                        .WithMany("Sites")
                        .HasForeignKey("client_company_id");

                    b.HasOne("Jarvis.db.Models.Company", "Company")
                        .WithMany("Sites")
                        .HasForeignKey("company_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany("Sites")
                        .HasForeignKey("status");
                });

            modelBuilder.Entity("Jarvis.db.Models.StatusMaster", b =>
                {
                    b.HasOne("Jarvis.db.Models.StatusTypes", "StatusTypes")
                        .WithMany("Status")
                        .HasForeignKey("status_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.Tasks", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("Tasks")
                        .HasForeignKey("asset_id");

                    b.HasOne("Jarvis.db.Models.InspectionsTemplateFormIO", "FormIO")
                        .WithMany("Tasks")
                        .HasForeignKey("form_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.TempFormIOBuildings", b =>
                {
                    b.HasOne("Jarvis.db.Models.FormIOBuildings", "FormIOBuildings")
                        .WithMany("TempFormIOBuildings")
                        .HasForeignKey("formiobuilding_id");

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("TempFormIOBuildings")
                        .HasForeignKey("wo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.TempFormIOFloors", b =>
                {
                    b.HasOne("Jarvis.db.Models.FormIOFloors", "FormIOFloors")
                        .WithMany("TempFormIOFloors")
                        .HasForeignKey("formiofloor_id");

                    b.HasOne("Jarvis.db.Models.TempFormIOBuildings", "TempFormIOBuildings")
                        .WithMany("TempFormIOFloors")
                        .HasForeignKey("temp_formiobuilding_id");

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("TempFormIOFloors")
                        .HasForeignKey("wo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.TempFormIORooms", b =>
                {
                    b.HasOne("Jarvis.db.Models.FormIORooms", "FormIORooms")
                        .WithMany("TempFormIORooms")
                        .HasForeignKey("formioroom_id");

                    b.HasOne("Jarvis.db.Models.TempFormIOFloors", "TempFormIOFloors")
                        .WithMany("TempFormIORooms")
                        .HasForeignKey("temp_formiofloor_id");

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("TempFormIORooms")
                        .HasForeignKey("wo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.TempFormIOSections", b =>
                {
                    b.HasOne("Jarvis.db.Models.FormIOSections", "FormIOSections")
                        .WithMany("TempFormIOSections")
                        .HasForeignKey("formiosection_id");

                    b.HasOne("Jarvis.db.Models.TempFormIORooms", "TempFormIORooms")
                        .WithMany("TempFormIOSections")
                        .HasForeignKey("temp_formioroom_id");

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("TempFormIOSections")
                        .HasForeignKey("wo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.User", b =>
                {
                    b.HasOne("Jarvis.db.Models.ClientCompany", "Active_client_Company")
                        .WithMany()
                        .HasForeignKey("ac_active_client_company");

                    b.HasOne("Jarvis.db.Models.Company", "Active_Company")
                        .WithMany()
                        .HasForeignKey("ac_active_company");

                    b.HasOne("Jarvis.db.Models.Role", "Active_Role_App")
                        .WithMany()
                        .HasForeignKey("ac_active_role_app");

                    b.HasOne("Jarvis.db.Models.Role", "Active_Role_Web")
                        .WithMany()
                        .HasForeignKey("ac_active_role_web");

                    b.HasOne("Jarvis.db.Models.Sites", "Active_Site")
                        .WithMany()
                        .HasForeignKey("ac_active_site");

                    b.HasOne("Jarvis.db.Models.ClientCompany", "default_client_Company")
                        .WithMany()
                        .HasForeignKey("ac_default_client_company");

                    b.HasOne("Jarvis.db.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("ac_default_company");

                    b.HasOne("Jarvis.db.Models.Role", "Role_App")
                        .WithMany()
                        .HasForeignKey("ac_default_role_app");

                    b.HasOne("Jarvis.db.Models.Role", "Role_Web")
                        .WithMany()
                        .HasForeignKey("ac_default_role_web");

                    b.HasOne("Jarvis.db.Models.Sites", "Site")
                        .WithMany()
                        .HasForeignKey("ac_default_site");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "Report_StatusMaster")
                        .WithMany("ReportUser")
                        .HasForeignKey("executive_report_status");

                    b.HasOne("Jarvis.db.Models.LanguageMaster", "LanguageMaster")
                        .WithMany()
                        .HasForeignKey("prefer_language_id");

                    b.HasOne("Jarvis.db.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("role_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany("User")
                        .HasForeignKey("status");
                });

            modelBuilder.Entity("Jarvis.db.Models.UserEmailNotificationConfigurationSettings", b =>
                {
                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("disable_till_by");

                    b.HasOne("Jarvis.db.Models.User", "User")
                        .WithOne("UserEmailNotificationConfigurationSettings")
                        .HasForeignKey("Jarvis.db.Models.UserEmailNotificationConfigurationSettings", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.UserRoles", b =>
                {
                    b.HasOne("Jarvis.db.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status");

                    b.HasOne("Jarvis.db.Models.User", "User")
                        .WithMany("Userroles")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.UserSites", b =>
                {
                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany("UserSites")
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany("UserSites")
                        .HasForeignKey("status");

                    b.HasOne("Jarvis.db.Models.User", "User")
                        .WithMany("Usersites")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WOInspectionsTemplateFormIOAssignment", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Parent_Asset")
                        .WithMany()
                        .HasForeignKey("asset_id");

                    b.HasOne("Jarvis.db.Models.InspectionsTemplateFormIO", "InspectionsTemplateFormIO")
                        .WithMany("WOInspectionsTemplateFormIOAssignment")
                        .HasForeignKey("form_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.InspectionTemplateAssetClass", "InspectionTemplateAssetClass")
                        .WithMany("WOInspectionsTemplateFormIOAssignment")
                        .HasForeignKey("inspectiontemplate_asset_class_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Tasks", "Tasks")
                        .WithMany()
                        .HasForeignKey("task_id");

                    b.HasOne("Jarvis.db.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("technician_user_id");

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("WOInspectionsTemplateFormIOAssignment")
                        .HasForeignKey("wo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WOLineBuildingMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.FormIOBuildings", "FormIOBuildings")
                        .WithMany()
                        .HasForeignKey("formiobuilding_id");

                    b.HasOne("Jarvis.db.Models.FormIOFloors", "FormIOFloors")
                        .WithMany()
                        .HasForeignKey("formiofloor_id");

                    b.HasOne("Jarvis.db.Models.FormIORooms", "FormIORooms")
                        .WithMany()
                        .HasForeignKey("formioroom_id");

                    b.HasOne("Jarvis.db.Models.FormIOSections", "FormIOSections")
                        .WithMany("WOLineBuildingMapping")
                        .HasForeignKey("formiosection_id");

                    b.HasOne("Jarvis.db.Models.WOOnboardingAssets", "WOOnboardingAssets")
                        .WithOne("WOLineBuildingMapping")
                        .HasForeignKey("Jarvis.db.Models.WOLineBuildingMapping", "woonboardingassets_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOLineIssue", b =>
                {
                    b.HasOne("Jarvis.db.Models.AssetFormIO", "AssetFormIO")
                        .WithMany("WOLineIssue")
                        .HasForeignKey("asset_form_id");

                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("asset_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("issue_status");

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id");

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("WOLineIssue")
                        .HasForeignKey("wo_id");

                    b.HasOne("Jarvis.db.Models.WOOnboardingAssets", "WOOnboardingAssets")
                        .WithMany("WOLineIssue")
                        .HasForeignKey("woonboardingassets_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOOBAssetFedByMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id");

                    b.HasOne("Jarvis.db.Models.WOOnboardingAssets", "WOOnboardingAssets")
                        .WithMany("WOOBAssetFedByMapping")
                        .HasForeignKey("woonboardingassets_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOOBAssetTempFormIOBuildingMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.TempFormIOBuildings", "TempFormIOBuildings")
                        .WithMany()
                        .HasForeignKey("temp_formiobuilding_id");

                    b.HasOne("Jarvis.db.Models.TempFormIOFloors", "TempFormIOFloors")
                        .WithMany()
                        .HasForeignKey("temp_formiofloor_id");

                    b.HasOne("Jarvis.db.Models.TempFormIORooms", "TempFormIORooms")
                        .WithMany()
                        .HasForeignKey("temp_formioroom_id");

                    b.HasOne("Jarvis.db.Models.TempFormIOSections", "TempFormIOSections")
                        .WithMany()
                        .HasForeignKey("temp_formiosection_id");

                    b.HasOne("Jarvis.db.Models.WOOnboardingAssets", "WOOnboardingAssets")
                        .WithOne("WOOBAssetTempFormIOBuildingMapping")
                        .HasForeignKey("Jarvis.db.Models.WOOBAssetTempFormIOBuildingMapping", "woonboardingassets_id");
                });

            modelBuilder.Entity("Jarvis.db.Models.WOOnboardingAssets", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany("WOOnboardingAssets")
                        .HasForeignKey("asset_id");

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("WOOnboardingAssets")
                        .HasForeignKey("wo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WOOnboardingAssetsImagesMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.WOOnboardingAssets", "WOOnboardingAssets")
                        .WithMany("WOOnboardingAssetsImagesMapping")
                        .HasForeignKey("woonboardingassets_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WOcategorytoTaskMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "_assigned_asset")
                        .WithMany("_assigned_asset_WOcategorytoTaskMapping")
                        .HasForeignKey("assigned_asset");

                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithOne("WOcategorytoTaskMapping")
                        .HasForeignKey("Jarvis.db.Models.WOcategorytoTaskMapping", "newly_created_asset_id");

                    b.HasOne("Jarvis.db.Models.Tasks", "Tasks")
                        .WithMany("WOcategorytoTaskMapping")
                        .HasForeignKey("task_id");

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("WOcategorytoTaskMapping")
                        .HasForeignKey("wo_id");

                    b.HasOne("Jarvis.db.Models.WOInspectionsTemplateFormIOAssignment", "WOInspectionsTemplateFormIOAssignment")
                        .WithMany("WOcategorytoTaskMapping")
                        .HasForeignKey("wo_inspectionsTemplateFormIOAssignment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WOlineAssetPMImagesMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.ActiveAssetPMWOlineMapping", "ActiveAssetPMWOlineMapping")
                        .WithMany("WOlineAssetPMImagesMapping")
                        .HasForeignKey("active_asset_pm_woline_mapping_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WOlineIssueImagesMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.WOLineIssue", "WOLineIssue")
                        .WithMany("WOlineIssueImagesMapping")
                        .HasForeignKey("wo_line_issue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WOlineSubLevelcomponentMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id");

                    b.HasOne("Jarvis.db.Models.WOOnboardingAssets", "WOOnboardingAssets")
                        .WithMany("WOlineSubLevelcomponentMapping")
                        .HasForeignKey("woonboardingassets_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WOlineTopLevelcomponentMapping", b =>
                {
                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id");

                    b.HasOne("Jarvis.db.Models.WOOnboardingAssets", "WOOnboardingAssets")
                        .WithMany("WOlineTopLevelcomponentMapping")
                        .HasForeignKey("woonboardingassets_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WorkOrderAttachments", b =>
                {
                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("WorkOrderAttachments")
                        .HasForeignKey("wo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WorkOrderCancel", b =>
                {
                    b.HasOne("Jarvis.db.Models.CancelReasonMaster", "CancelReasonMaster")
                        .WithMany()
                        .HasForeignKey("reason_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany()
                        .HasForeignKey("wo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WorkOrderIssues", b =>
                {
                    b.HasOne("Jarvis.db.Models.Issue", "Issue")
                        .WithMany()
                        .HasForeignKey("issue_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany()
                        .HasForeignKey("wo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WorkOrderTasks", b =>
                {
                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.Tasks", "Tasks")
                        .WithMany()
                        .HasForeignKey("task_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.WorkOrders", "WorkOrders")
                        .WithMany("WorkOrderTasks")
                        .HasForeignKey("wo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jarvis.db.Models.WorkOrders", b =>
                {
                    b.HasOne("Jarvis.db.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("asset_id");

                    b.HasOne("Jarvis.db.Models.ClientCompany", "ClientCompany")
                        .WithMany()
                        .HasForeignKey("client_company_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "PriorityStatusMaster")
                        .WithMany()
                        .HasForeignKey("priority");

                    b.HasOne("Jarvis.db.Models.ServiceDealers", "ServiceDealers")
                        .WithMany()
                        .HasForeignKey("service_dealer_id");

                    b.HasOne("Jarvis.db.Models.Sites", "Sites")
                        .WithMany()
                        .HasForeignKey("site_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.StatusMaster", "StatusMaster")
                        .WithMany()
                        .HasForeignKey("status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jarvis.db.Models.User", "TechnicianUser")
                        .WithMany()
                        .HasForeignKey("technician_user_id");

                    b.HasOne("Jarvis.db.Models.StatusMaster", "WOTypeStatusMaster")
                        .WithMany()
                        .HasForeignKey("wo_type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
